{
    "language": "en",
    "messages": [
        {
            "id": [
                "EL_AG_UNABLE_READ_POL_FILE",
                "Unable to read policy file {Arg_1} for service {Arg_2}, error: {Arg_3}"
            ],
            "message": "Unable to read policy file {Arg_1} for service {Arg_2}, error: {Arg_3}",
            "translation": "Unable to read policy file {Arg_1} for service {Arg_2}, error: {Arg_3}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_START_ADVERTISE_POL",
                "Start policy advertising with the exchange for service {Arg_1}/{Arg_2}."
            ],
            "message": "Start policy advertising with the exchange for service {Arg_1}/{Arg_2}.",
            "translation": "Start policy advertising with the exchange for service {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_UNABLE_ADVERTISE_POL",
                "Unable to advertise policies with exchange for service {Arg_1}/{Arg_2}, error: {Arg_3}"
            ],
            "message": "Unable to advertise policies with exchange for service {Arg_1}/{Arg_2}, error: {Arg_3}",
            "translation": "Unable to advertise policies with exchange for service {Arg_1}/{Arg_2}, error: {Arg_3}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_COMPLETE_ADVERTISE_POL",
                "Complete policy advertising with the exchange for service {Arg_1}/{Arg_2}."
            ],
            "message": "Complete policy advertising with the exchange for service {Arg_1}/{Arg_2}.",
            "translation": "Complete policy advertising with the exchange for service {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_UNABLE_READ_NODE_POL_FROM_DB",
                "unable to read node policy from the local database. {Arg_1}"
            ],
            "message": "unable to read node policy from the local database. {Arg_1}",
            "translation": "unable to read node policy from the local database. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_UNABLE_READ_NODE_FROM_DB",
                "Unable to read node object from the local database. {Arg_1}"
            ],
            "message": "Unable to read node object from the local database. {Arg_1}",
            "translation": "Unable to read node object from the local database. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_UNABLE_SYNC_NODE_POL_WITH_EXCH",
                "Unable to sync the local node policy with the exchange copy. Error: {Arg_1}"
            ],
            "message": "Unable to sync the local node policy with the exchange copy. Error: {Arg_1}",
            "translation": "Unable to sync the local node policy with the exchange copy. Error: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_NODE_POL_SYNCED_WITH_EXCH",
                "Node policy updated with the exchange copy: {Arg_1}"
            ],
            "message": "Node policy updated with the exchange copy: {Arg_1}",
            "translation": "Node policy updated with the exchange copy: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_UNABLE_SYNC_NODE_UI_WITH_EXCH",
                "Unable to sync the local node user input with the exchange copy. Error: {Arg_1}"
            ],
            "message": "Unable to sync the local node user input with the exchange copy. Error: {Arg_1}",
            "translation": "Unable to sync the local node user input with the exchange copy. Error: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_NODE_UI_SYNCED_WITH_EXCH",
                "Node user input updated with the exchange copy. The changed user inputs are: {Arg_1}"
            ],
            "message": "Node user input updated with the exchange copy. The changed user inputs are: {Arg_1}",
            "translation": "Node user input updated with the exchange copy. The changed user inputs are: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_NODE_CANNOT_VERIFY_AG",
                "Node could not verify the agreement {Arg_1} with the consumer. Will cancel it"
            ],
            "message": "Node could not verify the agreement {Arg_1} with the consumer. Will cancel it",
            "translation": "Node could not verify the agreement {Arg_1} with the consumer. Will cancel it",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_NODE_IS_OFFLINE",
                "Node is offline. Logging of periodic offline error messages will be curtailed until connection is restored"
            ],
            "message": "Node is offline. Logging of periodic offline error messages will be curtailed until connection is restored",
            "translation": "Node is offline. Logging of periodic offline error messages will be curtailed until connection is restored",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_UNABLE_SYNC_NODE_WITH_EXCH",
                "Unable to sync the node with the exchange copy. Error: {Arg_1}"
            ],
            "message": "Unable to sync the node with the exchange copy. Error: {Arg_1}",
            "translation": "Unable to sync the node with the exchange copy. Error: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_ERR_RETRIEVE_SVC_CONFIGSTATE_FROM_EXCH",
                "Unable to retrieve the service configuration state for node resource {Arg_1} from the exchange, error {Arg_2}"
            ],
            "message": "Unable to retrieve the service configuration state for node resource {Arg_1} from the exchange, error {Arg_2}",
            "translation": "Unable to retrieve the service configuration state for node resource {Arg_1} from the exchange, error {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_UNABLE_READ_NODE_EXCH_PATTERN_FROM_DB",
                "Unable to retrieve the saved node exchange pattern from the local database. {Arg_1}"
            ],
            "message": "Unable to retrieve the saved node exchange pattern from the local database. {Arg_1}",
            "translation": "Unable to retrieve the saved node exchange pattern from the local database. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_UNABLE_WRITE_NODE_EXCH_PATTERN_TO_DB",
                "Unable to save the new node exchange pattern {Arg_1} to the local database. Error: {Arg_2}"
            ],
            "message": "Unable to save the new node exchange pattern {Arg_1} to the local database. Error: {Arg_2}",
            "translation": "Unable to save the new node exchange pattern {Arg_1} to the local database. Error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_TERM_UNABLE_SYNC_CONTAINERS",
                "anax terminating, unable to sync up containers."
            ],
            "message": "anax terminating, unable to sync up containers.",
            "translation": "anax terminating, unable to sync up containers.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_TERM_UNABLE_SYNC_AGS",
                "anax terminating, unable to complete agreement sync up. {Arg_1}"
            ],
            "message": "anax terminating, unable to complete agreement sync up. {Arg_1}",
            "translation": "anax terminating, unable to complete agreement sync up. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No input found.",
            "message": "No input found.",
            "translation": "No input found.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Unauthorized. No exchange user id is supplied.",
            "message": "Unauthorized. No exchange user id is supplied.",
            "translation": "Unauthorized. No exchange user id is supplied.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Failed to authenticate the user with the exchange. {Err}",
            "message": "Failed to authenticate the user with the exchange. {Err}",
            "translation": "Failed to authenticate the user with the exchange. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Input body couldn't be deserialized to JSON object. {Err}",
            "message": "Input body couldn't be deserialized to JSON object. {Err}",
            "translation": "Input body couldn't be deserialized to JSON object. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Input body couldn't be deserialized to PolicyCheck object. {Err}",
            "message": "Input body couldn't be deserialized to PolicyCheck object. {Err}",
            "translation": "Input body couldn't be deserialized to PolicyCheck object. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Input body couldn't be deserialized to UserInputCheck object. {Err}",
            "message": "Input body couldn't be deserialized to UserInputCheck object. {Err}",
            "translation": "Input body couldn't be deserialized to UserInputCheck object. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Input body couldn't be deserialized to CompCheck object. {Err}",
            "message": "Input body couldn't be deserialized to CompCheck object. {Err}",
            "translation": "Input body couldn't be deserialized to CompCheck object. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No exchange user id is supplied.",
            "message": "No exchange user id is supplied.",
            "translation": "No exchange user id is supplied.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "No exchange user organization id is supplied.",
            "message": "No exchange user organization id is supplied.",
            "translation": "No exchange user organization id is supplied.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "No exchange user password or api key is supplied.",
            "message": "No exchange user password or api key is supplied.",
            "translation": "No exchange user password or api key is supplied.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Wrong organization id, user id or password.",
            "message": "Wrong organization id, user id or password.",
            "translation": "Wrong organization id, user id or password.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Internal server error",
            "message": "Internal server error",
            "translation": "Internal server error",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Error parsing the selections {Form}. {Err}",
            "message": "Error parsing the selections {Form}. {Err}",
            "translation": "Error parsing the selections {Form}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Form",
                    "string": "%[1]v",
                    "type": "net/url.Values",
                    "underlyingType": "map[string][]string",
                    "argNum": 1,
                    "expr": "r.Form"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting {Resource} for output, error {Err}",
            "message": "Error getting {Resource} for output, error {Err}",
            "translation": "Error getting {Resource} for output, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Resource",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "resource"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_PARSING_INPUT_FOR_NODE_REG",
                "Error parsing input for node configuration/registration. Input body couldn't be deserialized to node object: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node configuration/registration. Input body couldn't be deserialized to node object: {Arg_1}, error: {Arg_2}",
            "translation": "Error parsing input for node configuration/registration. Input body couldn't be deserialized to node object: {Arg_1}, error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_PARSING_INPUT_FOR_NODE_UNREG",
                "Error parsing input for node configuration/registration. Input body couldn't be deserialized to configstate object: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node configuration/registration. Input body couldn't be deserialized to configstate object: {Arg_1}, error: {Arg_2}",
            "translation": "Error parsing input for node configuration/registration. Input body couldn't be deserialized to configstate object: {Arg_1}, error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_PARSING_INPUT_FOR_NODE_UPDATE",
                "Error parsing input for node update. Input body couldn't be deserialized to node object: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node update. Input body couldn't be deserialized to node object: {Arg_1}, error: {Arg_2}",
            "translation": "Error parsing input for node update. Input body couldn't be deserialized to node object: {Arg_1}, error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_PARSING_INPUT_FOR_NODE_POLICY",
                "Error parsing input for node policy. Input body could not be deserialized as a policy object: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node policy. Input body could not be deserialized as a policy object: {Arg_1}, error: {Arg_2}",
            "translation": "Error parsing input for node policy. Input body could not be deserialized as a policy object: {Arg_1}, error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_PARSING_INPUT_FOR_NODE_POLICY_PATCH",
                "Error parsing input for node policy patch. Input body could not be deserialized into a Constraint Expression or Property List: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node policy patch. Input body could not be deserialized into a Constraint Expression or Property List: {Arg_1}, error: {Arg_2}",
            "translation": "Error parsing input for node policy patch. Input body could not be deserialized into a Constraint Expression or Property List: {Arg_1}, error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_POLICY_PATCH_INPUT_PROPERTY_ERROR",
                "Error parsing input for node policy patch. Input body did not contain a Constraint Expression or Property List: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node policy patch. Input body did not contain a Constraint Expression or Property List: {Arg_1}, error: {Arg_2}",
            "translation": "Error parsing input for node policy patch. Input body did not contain a Constraint Expression or Property List: {Arg_1}, error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_PARSING_INPUT_FOR_NODE_UI",
                "Error parsing input for node user input. Input body could not be deserialized as a UserInput object: {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error parsing input for node user input. Input body could not be deserialized as a UserInput object: {Arg_1}, error: {Arg_2}",
            "translation": "Error parsing input for node user input. Input body could not be deserialized as a UserInput object: {Arg_1}, error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_REG",
                "Error in node configuration/registration for node {Arg_1}. {Arg_2}"
            ],
            "message": "Error in node configuration/registration for node {Arg_1}. {Arg_2}",
            "translation": "Error in node configuration/registration for node {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_UPDATE",
                "Error in updating node {Arg_1}. {Arg_2}"
            ],
            "message": "Error in updating node {Arg_1}. {Arg_2}",
            "translation": "Error in updating node {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_UNREG",
                "Error in node unregistration. {Arg_1}"
            ],
            "message": "Error in node unregistration. {Arg_1}",
            "translation": "Error in node unregistration. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_VERIFY_EXCH_VERSION",
                "Error verifiying exchange version. error: {Arg_1}"
            ],
            "message": "Error verifiying exchange version. error: {Arg_1}",
            "translation": "Error verifiying exchange version. error: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_POLICY_CREATE",
                "Error in creating or replacing node policy. {Arg_1}"
            ],
            "message": "Error in creating or replacing node policy. {Arg_1}",
            "translation": "Error in creating or replacing node policy. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_POLICY_PATCH",
                "Error in patching node policy. {Arg_1}"
            ],
            "message": "Error in patching node policy. {Arg_1}",
            "translation": "Error in patching node policy. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_POLICY_DEL",
                "Error in deleting node policy. {Arg_1}"
            ],
            "message": "Error in deleting node policy. {Arg_1}",
            "translation": "Error in deleting node policy. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_UI_UPDATE",
                "Error in updating node user input. {Arg_1}"
            ],
            "message": "Error in updating node user input. {Arg_1}",
            "translation": "Error in updating node user input. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_UI_PATCH",
                "Error in patching node user input. {Arg_1}"
            ],
            "message": "Error in patching node user input. {Arg_1}",
            "translation": "Error in patching node user input. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_IN_NODE_UI_DEL",
                "Error in deleting node userinput. {Arg_1}"
            ],
            "message": "Error in deleting node userinput. {Arg_1}",
            "translation": "Error in deleting node userinput. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_START_NODE_REG",
                "Start node configuration/registration for node {Arg_1}."
            ],
            "message": "Start node configuration/registration for node {Arg_1}.",
            "translation": "Start node configuration/registration for node {Arg_1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_START_NODE_UPDATE",
                "Start updating node {Arg_1}."
            ],
            "message": "Start updating node {Arg_1}.",
            "translation": "Start updating node {Arg_1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_COMPLETE_NODE_UPDATE",
                "Complete node update for {Arg_1}."
            ],
            "message": "Complete node update for {Arg_1}.",
            "translation": "Complete node update for {Arg_1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_START_NODE_UNREG",
                "Start node unregistration."
            ],
            "message": "Start node unregistration.",
            "translation": "Start node unregistration.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_COMPLETE_NODE_UNREG",
                "Node unregistration complete for node {Arg_1}."
            ],
            "message": "Node unregistration complete for node {Arg_1}.",
            "translation": "Node unregistration complete for node {Arg_1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_UNREG_NOT_FOUND",
                "Error unregistring the node. The node is not found from the database."
            ],
            "message": "Error unregistring the node. The node is not found from the database.",
            "translation": "Error unregistring the node. The node is not found from the database.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_UNREG_NOT_IN_STATE",
                "Error unregistring the node. The node must be in 'configured' or 'configuring' state in order to unconfigure it."
            ],
            "message": "Error unregistring the node. The node must be in 'configured' or 'configuring' state in order to unconfigure it.",
            "translation": "Error unregistring the node. The node must be in 'configured' or 'configuring' state in order to unconfigure it.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_UNREG_WRONG_VALUE_FOR_RN",
                "Input error for node unregistration. {Arg_1} is an incorrect value for removeNode"
            ],
            "message": "Input error for node unregistration. {Arg_1} is an incorrect value for removeNode",
            "translation": "Input error for node unregistration. {Arg_1} is an incorrect value for removeNode",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_UNREG_WRONG_VALUE_FOR_DC",
                "Input error for node unregistration. {Arg_1} is an incorrect value for deepClean"
            ],
            "message": "Input error for node unregistration. {Arg_1} is an incorrect value for deepClean",
            "translation": "Input error for node unregistration. {Arg_1} is an incorrect value for deepClean",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_UNREG_WRONG_VALUE_FOR_BLOCK",
                "Input error for node unregistration. {Arg_1} is an incorrect value for block"
            ],
            "message": "Input error for node unregistration. {Arg_1} is an incorrect value for block",
            "translation": "Input error for node unregistration. {Arg_1} is an incorrect value for block",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_READ_NODE_FROM_DB",
                "Unable to read node object from database, error {Arg_1}"
            ],
            "message": "Unable to read node object from database, error {Arg_1}",
            "translation": "Unable to read node object from database, error {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_SAVE_NODE_CONF_TO_DB",
                "Error saving new node config state (unconfiguring) in the database: {Arg_1}"
            ],
            "message": "Error saving new node config state (unconfiguring) in the database: {Arg_1}",
            "translation": "Error saving new node config state (unconfiguring) in the database: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_CONF_NOT_FOUND",
                "Error in node configuration. The node is not found from the database."
            ],
            "message": "Error in node configuration. The node is not found from the database.",
            "translation": "Error in node configuration. The node is not found from the database.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_NODE_CONF_WRONG_STATE",
                "Error in node configuration. The node must be in 'configured' or 'configuring' state in order to change the state to {Arg_1}."
            ],
            "message": "Error in node configuration. The node must be in 'configured' or 'configuring' state in order to change the state to {Arg_1}.",
            "translation": "Error in node configuration. The node must be in 'configured' or 'configuring' state in order to change the state to {Arg_1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_UNSUP_NODE_STATE_TRANS",
                "Node state transition from '{Arg_1}' to '{Arg_2}' is not supported."
            ],
            "message": "Node state transition from '{Arg_1}' to '{Arg_2}' is not supported.",
            "translation": "Node state transition from '{Arg_1}' to '{Arg_2}' is not supported.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_FAIL_GET_UI_FROM_DB",
                "Failed get user input from local db. {Arg_1}"
            ],
            "message": "Failed get user input from local db. {Arg_1}",
            "translation": "Failed get user input from local db. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_FAIL_FIND_SVC_PREF_FROM_UI",
                "Failed to find preferences for service {Arg_1}/{Arg_2} from the local user input, error: {Arg_3}"
            ],
            "message": "Failed to find preferences for service {Arg_1}/{Arg_2} from the local user input, error: {Arg_3}",
            "translation": "Failed to find preferences for service {Arg_1}/{Arg_2} from the local user input, error: {Arg_3}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_SAVE_NODE_CONFSTATE",
                "Error saving new node config state to database: {Arg_1}"
            ],
            "message": "Error saving new node config state to database: {Arg_1}",
            "translation": "Error saving new node config state to database: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_COMPLETE_NODE_REG",
                "Complete node configuration/registration for node {Arg_1}."
            ],
            "message": "Complete node configuration/registration for node {Arg_1}.",
            "translation": "Complete node configuration/registration for node {Arg_1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_SVC_CONF",
                "Error in service configuration for {Arg_1}. {Arg_2}"
            ],
            "message": "Error in service configuration for {Arg_1}. {Arg_2}",
            "translation": "Error in service configuration for {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_GET_SREFS_FOR_PATTERN",
                "Error getting service references for pattern {Arg_1}. {Arg_2}"
            ],
            "message": "Error getting service references for pattern {Arg_1}. {Arg_2}",
            "translation": "Error getting service references for pattern {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_IGNORE_TYPE_MISMATCH",
                "Ignoring service. {Arg_1}"
            ],
            "message": "Ignoring service. {Arg_1}",
            "translation": "Ignoring service. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_NEW_NODE_POL",
                "New node policy: {Arg_1}"
            ],
            "message": "New node policy: {Arg_1}",
            "translation": "New node policy: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_NODE_POL_DELETED",
                "Deleted node policy"
            ],
            "message": "Deleted node policy",
            "translation": "Deleted node policy",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_NEW_NODE_UI",
                "New node user input: {Arg_1}"
            ],
            "message": "New node user input: {Arg_1}",
            "translation": "New node user input: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_NO_NODE_UI_TO_DEL",
                "No node user input to detele"
            ],
            "message": "No node user input to detele",
            "translation": "No node user input to detele",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_DELETED_ALL_NODE_UI",
                "Deleted all node user input"
            ],
            "message": "Deleted all node user input",
            "translation": "Deleted all node user input",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_START_SVC_CONFIG",
                "Start service configuration with user input for {Arg_1}/{Arg_2}."
            ],
            "message": "Start service configuration with user input for {Arg_1}/{Arg_2}.",
            "translation": "Start service configuration with user input for {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_START_SVC_AUTO_CONFIG",
                "Start service auto configuration for {Arg_1}/{Arg_2}."
            ],
            "message": "Start service auto configuration for {Arg_1}/{Arg_2}.",
            "translation": "Start service auto configuration for {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_COMPLETE_SVC_CONFIG",
                "Complete service configuration for {Arg_1}/{Arg_2}."
            ],
            "message": "Complete service configuration for {Arg_1}/{Arg_2}.",
            "translation": "Complete service configuration for {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_COMPLETE_SVC_AUTO_CONFIG",
                "Complete service auto configuration for {Arg_1}/{Arg_2}."
            ],
            "message": "Complete service auto configuration for {Arg_1}/{Arg_2}.",
            "translation": "Complete service auto configuration for {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_MISS_VAR_IN_SVC_CONFIG",
                "Variable {Arg_1} is missing in the service configuration for {Arg_2}/{Arg_3}. It may cause agreement not formed if the deployment policy does not contain the setting for the missing variable."
            ],
            "message": "Variable {Arg_1} is missing in the service configuration for {Arg_2}/{Arg_3}. It may cause agreement not formed if the deployment policy does not contain the setting for the missing variable.",
            "translation": "Variable {Arg_1} is missing in the service configuration for {Arg_2}/{Arg_3}. It may cause agreement not formed if the deployment policy does not contain the setting for the missing variable.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_CONFIG_SVC",
                "Error configuring service {Arg_1}. {Arg_2}"
            ],
            "message": "Error configuring service {Arg_1}. {Arg_2}",
            "translation": "Error configuring service {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_ERR_CHANGE_SVC_CONFIGSTATE",
                "Error changing service configstate {Arg_1}, error {Arg_2}"
            ],
            "message": "Error changing service configstate {Arg_1}, error {Arg_2}",
            "translation": "Error changing service configstate {Arg_1}, error {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_START_CHANGE_SVC_CONFIGSTATE",
                "Start changing service configuration state to {Arg_1} for {Arg_2} for the node."
            ],
            "message": "Start changing service configuration state to {Arg_1} for {Arg_2} for the node.",
            "translation": "Start changing service configuration state to {Arg_1} for {Arg_2} for the node.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_API_COMPLETE_CHANGE_SVC_CONFIGSTATE",
                "Complete changing service configuration state to {Arg_1} for {Arg_2} for the node."
            ],
            "message": "Complete changing service configuration state to {Arg_1} for {Arg_2} for the node.",
            "translation": "Complete changing service configuration state to {Arg_1} for {Arg_2} for the node.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error converting the selections into Selectors: {Err}",
            "message": "Error converting the selections into Selectors: {Err}",
            "translation": "Error converting the selections into Selectors: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Name, or Org is empty string.",
            "message": "Name, or Org is empty string.",
            "translation": "Name, or Org is empty string.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The serviceVersions array is empty.",
            "message": "The serviceVersions array is empty.",
            "translation": "The serviceVersions array is empty.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "properties contains an invalid property: {Err}",
            "message": "properties contains an invalid property: {Err}",
            "translation": "properties contains an invalid property: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The property {PROPSVCPRIVILEGED} must have a boolean value (true or false).",
            "message": "The property {PROPSVCPRIVILEGED} must have a boolean value (true or false).",
            "translation": "The property {PROPSVCPRIVILEGED} must have a boolean value (true or false).",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PROPSVCPRIVILEGED",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "externalpolicy.PROP_SVC_PRIVILEGED"
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_NODE_HB_FAILED",
                "Node heartbeat failed for node {Arg_1}/{Arg_2}. Error: {Arg_3}"
            ],
            "message": "Node heartbeat failed for node {Arg_1}/{Arg_2}. Error: {Arg_3}",
            "translation": "Node heartbeat failed for node {Arg_1}/{Arg_2}. Error: {Arg_3}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_AG_NODE_HB_RESTORED",
                "Node heartbeat restored for node {Arg_1}/{Arg_2}."
            ],
            "message": "Node heartbeat restored for node {Arg_1}/{Arg_2}.",
            "translation": "Node heartbeat restored for node {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[verbose] {M}",
            "message": "[verbose] {M}",
            "translation": "[verbose] {M}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "M",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "m"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error: {Msg}",
            "message": "Error: {Msg}",
            "translation": "Error: {Msg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Msg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "msg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Warning: {Msg}",
            "message": "Warning: {Msg}",
            "translation": "Warning: {Msg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Msg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "msg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal bytes from {ErrMsg}: {Err}",
            "message": "failed to unmarshal bytes from {ErrMsg}: {Err}",
            "translation": "failed to unmarshal bytes from {ErrMsg}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ErrMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "errMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal data type from {ErrMsg}: {Err}",
            "message": "failed to marshal data type from {ErrMsg}: {Err}",
            "translation": "failed to marshal data type from {ErrMsg}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ErrMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "errMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "problem testing api key match: {Err}",
            "message": "problem testing api key match: {Err}",
            "translation": "problem testing api key match: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Using API key",
            "message": "Using API key",
            "translation": "Using API key",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "unable to create docker client: {Err}",
            "message": "unable to create docker client: {Err}",
            "translation": "unable to create docker client: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "docker auth domainName: {DomainName}",
            "message": "docker auth domainName: {DomainName}",
            "translation": "docker auth domainName: {DomainName}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DomainName",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "domainName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to find docker credentials for {Domain}",
            "message": "unable to find docker credentials for {Domain}",
            "translation": "unable to find docker credentials for {Domain}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Domain",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "domain"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Pushing {Repository}:{Tag}...",
            "message": "Pushing {Repository}:{Tag}...",
            "translation": "Pushing {Repository}:{Tag}...",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Repository",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "repository"
                },
                {
                    "id": "Tag",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "tag"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "could not get docker credentials from ~/.docker/config.json: {Err}. Maybe you need to run 'docker login ...' to provide credentials for the image registry.",
            "message": "could not get docker credentials from ~/.docker/config.json: {Err}. Maybe you need to run 'docker login ...' to provide credentials for the image registry.",
            "translation": "could not get docker credentials from ~/.docker/config.json: {Err}. Maybe you need to run 'docker login ...' to provide credentials for the image registry.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to push docker image {Repository____tag}: {Err}",
            "message": "unable to push docker image {Repository____tag}: {Err}",
            "translation": "unable to push docker image {Repository____tag}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Repository____tag",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "repository + \":\" + tag"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "could not find the image digest in the docker push output",
            "message": "could not find the image digest in the docker push output",
            "translation": "could not find the image digest in the docker push output",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Pulling {Repository}:{Tag}...",
            "message": "Pulling {Repository}:{Tag}...",
            "translation": "Pulling {Repository}:{Tag}...",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Repository",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "repository"
                },
                {
                    "id": "Tag",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "tag"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to pull docker image {Repository____tag}. Docker credentials were not found. Maybe you need to run 'docker login ...' if the image registry is private. Error: {Err}",
            "message": "unable to pull docker image {Repository____tag}. Docker credentials were not found. Maybe you need to run 'docker login ...' if the image registry is private. Error: {Err}",
            "translation": "unable to pull docker image {Repository____tag}. Docker credentials were not found. Maybe you need to run 'docker login ...' if the image registry is private. Error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Repository____tag",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "repository + \":\" + tag"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to pull docker image {Repository____tag}: {Err}",
            "message": "unable to pull docker image {Repository____tag}: {Err}",
            "translation": "unable to pull docker image {Repository____tag}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Repository____tag",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "repository + \":\" + tag"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "the id can not contain more than 1 '/'",
            "message": "the id can not contain more than 1 '/'",
            "translation": "the id can not contain more than 1 '/'",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "reading stdin failed: {Err}",
            "message": "reading stdin failed: {Err}",
            "translation": "reading stdin failed: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "reading {FilePath} failed: {Err}",
            "message": "reading {FilePath} failed: {Err}",
            "translation": "reading {FilePath} failed: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FilePath",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "filePath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Warning: environment variable '{EnvVarName}' is referenced in input file, but not defined in the environment.",
            "message": "Warning: environment variable '{EnvVarName}' is referenced in input file, but not defined in the environment.",
            "translation": "Warning: environment variable '{EnvVarName}' is referenced in input file, but not defined in the environment.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "EnvVarName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "envVarName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error reading input, error {Err}",
            "message": "Error reading input, error {Err}",
            "translation": "Error reading input, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Exiting.",
            "message": "Exiting.",
            "translation": "Exiting.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Error reading HTTP response, error {Err}",
            "message": "Error reading HTTP response, error {Err}",
            "translation": "Error reading HTTP response, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Can't connect to the Horizon REST API to run {ApiMethod}. Run 'systemctl status horizon' to check if the Horizon agent is running. Or set HORIZON_URL to connect to another local port that is connected to a remote Horizon agent via a ssh tunnel. Specific error is: {Err}",
            "message": "Can't connect to the Horizon REST API to run {ApiMethod}. Run 'systemctl status horizon' to check if the Horizon agent is running. Or set HORIZON_URL to connect to another local port that is connected to a remote Horizon agent via a ssh tunnel. Specific error is: {Err}",
            "translation": "Can't connect to the Horizon REST API to run {ApiMethod}. Run 'systemctl status horizon' to check if the Horizon agent is running. Or set HORIZON_URL to connect to another local port that is connected to a remote Horizon agent via a ssh tunnel. Specific error is: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMethod",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMethod"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Can't connect to the Horizon REST API to run {ApiMethod}. Maybe the ssh tunnel associated with that port is down? Or maybe the remote Horizon agent at the other end of that tunnel is down. Specific error is: {Err}",
            "message": "Can't connect to the Horizon REST API to run {ApiMethod}. Maybe the ssh tunnel associated with that port is down? Or maybe the remote Horizon agent at the other end of that tunnel is down. Specific error is: {Err}",
            "translation": "Can't connect to the Horizon REST API to run {ApiMethod}. Maybe the ssh tunnel associated with that port is down? Or maybe the remote Horizon agent at the other end of that tunnel is down. Specific error is: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMethod",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMethod"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{ApiMsg} new request failed: {Err}",
            "message": "{ApiMsg} new request failed: {Err}",
            "translation": "{ApiMsg} new request failed: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "HTTP code: {HttpCode}",
            "message": "HTTP code: {HttpCode}",
            "translation": "HTTP code: {HttpCode}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HttpCode",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "httpCode"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Bad HTTP code from {ApiMsg}: {HttpCode}",
            "message": "Bad HTTP code from {ApiMsg}: {HttpCode}",
            "translation": "Bad HTTP code from {ApiMsg}: {HttpCode}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "HttpCode",
                    "string": "%[2]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "httpCode"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "bad HTTP code from {ApiMsg}: {HttpCode}",
            "message": "bad HTTP code from {ApiMsg}: {HttpCode}",
            "translation": "bad HTTP code from {ApiMsg}: {HttpCode}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "HttpCode",
                    "string": "%[2]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "httpCode"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to read body response from {ApiMsg}: {Err}",
            "message": "Failed to read body response from {ApiMsg}: {Err}",
            "translation": "Failed to read body response from {ApiMsg}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to read body response from {ApiMsg}: {Err}",
            "message": "failed to read body response from {ApiMsg}: {Err}",
            "translation": "failed to read body response from {ApiMsg}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to unmarshal body response from {ApiMsg}: {Err}",
            "message": "Failed to unmarshal body response from {ApiMsg}: {Err}",
            "translation": "Failed to unmarshal body response from {ApiMsg}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal body response from {ApiMsg}: {Err}",
            "message": "failed to unmarshal body response from {ApiMsg}: {Err}",
            "translation": "failed to unmarshal body response from {ApiMsg}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "bad HTTP code {HttpCode} from {ApiMsg}: {Body}",
            "message": "bad HTTP code {HttpCode} from {ApiMsg}: {Body}",
            "translation": "bad HTTP code {HttpCode} from {ApiMsg}: {Body}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HttpCode",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "httpCode"
                },
                {
                    "id": "ApiMsg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "apiMsg"
                },
                {
                    "id": "Body",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "GetRespBodyAsString(resp.Body)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal body for {ApiMsg}: {Err}",
            "message": "failed to marshal body for {ApiMsg}: {Err}",
            "translation": "failed to marshal body for {ApiMsg}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to unmarshal bytes. {Err}",
            "message": "Failed to unmarshal bytes. {Err}",
            "translation": "Failed to unmarshal bytes. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting {OldMgmtHubCertPath} from {ANAXOVERWRITEFILE}: {Err}",
            "message": "Error getting {OldMgmtHubCertPath} from {ANAXOVERWRITEFILE}: {Err}",
            "translation": "Error getting {OldMgmtHubCertPath} from {ANAXOVERWRITEFILE}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "OldMgmtHubCertPath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "config.OldMgmtHubCertPath"
                },
                {
                    "id": "ANAXOVERWRITEFILE",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "ANAX_OVERWRITE_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Encountered error reading ICP cert file {IcpCertPath}: {Err}",
            "message": "Encountered error reading ICP cert file {IcpCertPath}: {Err}",
            "translation": "Encountered error reading ICP cert file {IcpCertPath}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "IcpCertPath",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "icpCertPath"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting HZN_EXCHANGE_URL from {ANAXOVERWRITEFILE}. {Err}",
            "message": "Error getting HZN_EXCHANGE_URL from {ANAXOVERWRITEFILE}. {Err}",
            "translation": "Error getting HZN_EXCHANGE_URL from {ANAXOVERWRITEFILE}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ANAXOVERWRITEFILE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ANAX_OVERWRITE_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting ExchangeUrl from {ANAXCONFIGFILE}. {Err}",
            "message": "Error getting ExchangeUrl from {ANAXCONFIGFILE}. {Err}",
            "translation": "Error getting ExchangeUrl from {ANAXCONFIGFILE}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ANAXCONFIGFILE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ANAX_CONFIG_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "HZN_EXCHANGE_URL is not set, get it from horizon agent configuration on the node.",
            "message": "HZN_EXCHANGE_URL is not set, get it from horizon agent configuration on the node.",
            "translation": "HZN_EXCHANGE_URL is not set, get it from horizon agent configuration on the node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Could not get the exchange url from environment variable HZN_EXCHANGE_URL or the horizon agent",
            "message": "Could not get the exchange url from environment variable HZN_EXCHANGE_URL or the horizon agent",
            "translation": "Could not get the exchange url from environment variable HZN_EXCHANGE_URL or the horizon agent",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The exchange url: {ExchUrl}",
            "message": "The exchange url: {ExchUrl}",
            "translation": "The exchange url: {ExchUrl}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExchUrl",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "exchUrl"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting HZN_FSS_CSSURL from {ANAXOVERWRITEFILE}. {Err}",
            "message": "Error getting HZN_FSS_CSSURL from {ANAXOVERWRITEFILE}. {Err}",
            "translation": "Error getting HZN_FSS_CSSURL from {ANAXOVERWRITEFILE}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ANAXOVERWRITEFILE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ANAX_OVERWRITE_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting model management service Url from {ANAXCONFIGFILE}. {Err}",
            "message": "Error getting model management service Url from {ANAXCONFIGFILE}. {Err}",
            "translation": "Error getting model management service Url from {ANAXCONFIGFILE}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ANAXCONFIGFILE",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ANAX_CONFIG_FILE"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "HZN_FSS_CSSURL is not set, get it from horizon agent configuration on the node.",
            "message": "HZN_FSS_CSSURL is not set, get it from horizon agent configuration on the node.",
            "translation": "HZN_FSS_CSSURL is not set, get it from horizon agent configuration on the node.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Could not get the model management service url from environment variable HZN_FSS_CSSURL or the horizon agent",
            "message": "Could not get the model management service url from environment variable HZN_FSS_CSSURL or the horizon agent",
            "translation": "Could not get the model management service url from environment variable HZN_FSS_CSSURL or the horizon agent",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The model management service url: {MmsUrl}",
            "message": "The model management service url: {MmsUrl}",
            "translation": "The model management service url: {MmsUrl}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "MmsUrl",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "mmsUrl"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Can't connect to the Horizon {HorizonService} REST API to run {ApiMethod}. Set {ServiceEnvVarName} to use {Article} {HorizonService_1} other than the one the Horizon Agent is currently configured for. Specific error is: {Err}",
            "message": "Can't connect to the Horizon {HorizonService} REST API to run {ApiMethod}. Set {ServiceEnvVarName} to use {Article} {HorizonService_1} other than the one the Horizon Agent is currently configured for. Specific error is: {Err}",
            "translation": "Can't connect to the Horizon {HorizonService} REST API to run {ApiMethod}. Set {ServiceEnvVarName} to use {Article} {HorizonService_1} other than the one the Horizon Agent is currently configured for. Specific error is: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HorizonService",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "horizonService"
                },
                {
                    "id": "ApiMethod",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "apiMethod"
                },
                {
                    "id": "ServiceEnvVarName",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "serviceEnvVarName"
                },
                {
                    "id": "Article",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "article"
                },
                {
                    "id": "HorizonService_1",
                    "string": "%[5]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 5,
                    "expr": "horizonService"
                },
                {
                    "id": "Err",
                    "string": "%[6]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 6,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Can't connect to the Horizon {HorizonService} REST API to run {ApiMethod}. Maybe {ServiceEnvVarName} is set incorrectly? Or unset {ServiceEnvVarName_1} to use the {HorizonService_1} that the Horizon Agent is configured for. Specific error is: {Err}",
            "message": "Can't connect to the Horizon {HorizonService} REST API to run {ApiMethod}. Maybe {ServiceEnvVarName} is set incorrectly? Or unset {ServiceEnvVarName_1} to use the {HorizonService_1} that the Horizon Agent is configured for. Specific error is: {Err}",
            "translation": "Can't connect to the Horizon {HorizonService} REST API to run {ApiMethod}. Maybe {ServiceEnvVarName} is set incorrectly? Or unset {ServiceEnvVarName_1} to use the {HorizonService_1} that the Horizon Agent is configured for. Specific error is: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HorizonService",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "horizonService"
                },
                {
                    "id": "ApiMethod",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "apiMethod"
                },
                {
                    "id": "ServiceEnvVarName",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "serviceEnvVarName"
                },
                {
                    "id": "ServiceEnvVarName_1",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "serviceEnvVarName"
                },
                {
                    "id": "HorizonService_1",
                    "string": "%[5]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 5,
                    "expr": "horizonService"
                },
                {
                    "id": "Err",
                    "string": "%[6]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 6,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal exchange body for {ApiMsg}: {Err}",
            "message": "failed to marshal exchange body for {ApiMsg}: {Err}",
            "translation": "failed to marshal exchange body for {ApiMsg}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to open object file {Name}: {Err}",
            "message": "unable to open object file {Name}: {Err}",
            "translation": "unable to open object file {Name}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "file.Name()"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Encountered HTTP error: {Err} calling {Service} REST API {ApiMsg}. HTTP status: {Httpstatus}. Will retry.",
            "message": "Encountered HTTP error: {Err} calling {Service} REST API {ApiMsg}. HTTP status: {Httpstatus}. Will retry.",
            "translation": "Encountered HTTP error: {Err} calling {Service} REST API {ApiMsg}. HTTP status: {Httpstatus}. Will retry.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                },
                {
                    "id": "Service",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "service"
                },
                {
                    "id": "ApiMsg",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "apiMsg"
                },
                {
                    "id": "Httpstatus",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "http_status"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Encountered HTTP error: {Err} calling {Service} REST API {ApiMsg}. HTTP status: {Httpstatus}.",
            "message": "Encountered HTTP error: {Err} calling {Service} REST API {ApiMsg}. HTTP status: {Httpstatus}.",
            "translation": "Encountered HTTP error: {Err} calling {Service} REST API {ApiMsg}. HTTP status: {Httpstatus}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                },
                {
                    "id": "Service",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "service"
                },
                {
                    "id": "ApiMsg",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "apiMsg"
                },
                {
                    "id": "Httpstatus",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "http_status"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "bad HTTP code {HttpCode} from {ApiMsg}, output: {StringbodyBytes}",
            "message": "bad HTTP code {HttpCode} from {ApiMsg}, output: {StringbodyBytes}",
            "translation": "bad HTTP code {HttpCode} from {ApiMsg}, output: {StringbodyBytes}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HttpCode",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "httpCode"
                },
                {
                    "id": "ApiMsg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "apiMsg"
                },
                {
                    "id": "StringbodyBytes",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "string(bodyBytes)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal exchange body response from {ApiMsg}: {Err}",
            "message": "failed to unmarshal exchange body response from {ApiMsg}: {Err}",
            "translation": "failed to unmarshal exchange body response from {ApiMsg}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal exchange output from {ApiMsg}: {Err}",
            "message": "failed to marshal exchange output from {ApiMsg}: {Err}",
            "translation": "failed to marshal exchange output from {ApiMsg}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to read exchange body response from {ApiMsg}: {Err}",
            "message": "failed to read exchange body response from {ApiMsg}: {Err}",
            "translation": "failed to read exchange body response from {ApiMsg}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ApiMsg",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "apiMsg"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "bad HTTP code {HttpCode} from {ApiMsg}: {Code}, {Msg}",
            "message": "bad HTTP code {HttpCode} from {ApiMsg}: {Code}, {Msg}",
            "translation": "bad HTTP code {HttpCode} from {ApiMsg}: {Code}, {Msg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HttpCode",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "httpCode"
                },
                {
                    "id": "ApiMsg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "apiMsg"
                },
                {
                    "id": "Code",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "respMsg.Code"
                },
                {
                    "id": "Msg",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "respMsg.Msg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "bad HTTP code {HttpCode} from {ApiMsg}",
            "message": "bad HTTP code {HttpCode} from {ApiMsg}",
            "translation": "bad HTTP code {HttpCode} from {ApiMsg}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HttpCode",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "httpCode"
                },
                {
                    "id": "ApiMsg",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "apiMsg"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "exchange authentication must be specified with one of the following: the -u flag, the -n flag, HZN_EXCHANGE_USER_AUTH or HZN_EXCHANGE_NODE_AUTH",
            "message": "exchange authentication must be specified with one of the following: the -u flag, the -n flag, HZN_EXCHANGE_USER_AUTH or HZN_EXCHANGE_NODE_AUTH",
            "translation": "exchange authentication must be specified with one of the following: the -u flag, the -n flag, HZN_EXCHANGE_USER_AUTH or HZN_EXCHANGE_NODE_AUTH",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Verifying public key file ...",
            "message": "Verifying public key file ...",
            "translation": "Verifying public key file ...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "provided public key is not valid; error: {Err}",
            "message": "provided public key is not valid; error: {Err}",
            "translation": "provided public key is not valid; error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Checking private key file format ...",
            "message": "Checking private key file format ...",
            "translation": "Checking private key file format ...",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "provided private key is not valid; error: {Err}",
            "message": "provided private key is not valid; error: {Err}",
            "translation": "provided private key is not valid; error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to get absolute path for file {KeyFile}. {Err}",
            "message": "Failed to get absolute path for file {KeyFile}. {Err}",
            "translation": "Failed to get absolute path for file {KeyFile}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "KeyFile",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "keyFile"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{Err}. Please create the signing key.",
            "message": "{Err}. Please create the signing key.",
            "translation": "{Err}. Please create the signing key.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "running: {CmdStr}",
            "message": "running: {CmdStr}",
            "translation": "running: {CmdStr}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "CmdStr",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "cmdStr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "did not get a command object",
            "message": "did not get a command object",
            "translation": "did not get a command object",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Could not get Stdin pipe, error: {Err}",
            "message": "Could not get Stdin pipe, error: {Err}",
            "translation": "Could not get Stdin pipe, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "could not retrieve output from command, error: {Err}",
            "message": "could not retrieve output from command, error: {Err}",
            "translation": "could not retrieve output from command, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "could not retrieve stderr from command, error: {Err}",
            "message": "could not retrieve stderr from command, error: {Err}",
            "translation": "could not retrieve stderr from command, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to start command, error: {Err}",
            "message": "Unable to start command, error: {Err}",
            "translation": "Unable to start command, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to write to stdin of command, error: {Err}",
            "message": "Unable to write to stdin of command, error: {Err}",
            "translation": "Unable to write to stdin of command, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to close stdin, error: {Err}",
            "message": "Unable to close stdin, error: {Err}",
            "translation": "Unable to close stdin, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "could not read stdout, error: {Err}",
            "message": "could not read stdout, error: {Err}",
            "translation": "could not read stdout, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "could not read stderr, error: {Err}",
            "message": "could not read stderr, error: {Err}",
            "translation": "could not read stderr, error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "command failed: {Err}, stderr: {StringstderrBytes}",
            "message": "command failed: {Err}, stderr: {StringstderrBytes}",
            "translation": "command failed: {Err}, stderr: {StringstderrBytes}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                },
                {
                    "id": "StringstderrBytes",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "string(stderrBytes)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to use {HTTPRequestTimeoutOverride} to set the request timeout, the value is not a valid number: {EnvTimeout}",
            "message": "Unable to use {HTTPRequestTimeoutOverride} to set the request timeout, the value is not a valid number: {EnvTimeout}",
            "translation": "Unable to use {HTTPRequestTimeoutOverride} to set the request timeout, the value is not a valid number: {EnvTimeout}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "HTTPRequestTimeoutOverride",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "config.HTTPRequestTimeoutOverride"
                },
                {
                    "id": "EnvTimeout",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "envTimeout"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "HTTP request timeout set to {RequestTimeout} seconds",
            "message": "HTTP request timeout set to {RequestTimeout} seconds",
            "translation": "HTTP request timeout set to {RequestTimeout} seconds",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "RequestTimeout",
                    "string": "%[1]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "requestTimeout"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error converting environmental variable HZN_HTTP_RETRIES {MaxRetriess} to integer. {Err1}",
            "message": "Error converting environmental variable HZN_HTTP_RETRIES {MaxRetriess} to integer. {Err1}",
            "translation": "Error converting environmental variable HZN_HTTP_RETRIES {MaxRetriess} to integer. {Err1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "MaxRetriess",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "maxRetries_s"
                },
                {
                    "id": "Err1",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err1"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error converting environmental variable HZN_HTTP_RETRY_INTERVAL {RetryIntervals} to integer. {Err1}",
            "message": "Error converting environmental variable HZN_HTTP_RETRY_INTERVAL {RetryIntervals} to integer. {Err1}",
            "translation": "Error converting environmental variable HZN_HTTP_RETRY_INTERVAL {RetryIntervals} to integer. {Err1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "RetryIntervals",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "retryInterval_s"
                },
                {
                    "id": "Err1",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err1"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{Image} parsed into: domain={Domain}, path={Path}, tag={Tag}",
            "message": "{Image} parsed into: domain={Domain}, path={Path}, tag={Tag}",
            "translation": "{Image} parsed into: domain={Domain}, path={Path}, tag={Tag}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Image",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "image"
                },
                {
                    "id": "Domain",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "domain"
                },
                {
                    "id": "Path",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "path"
                },
                {
                    "id": "Tag",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "tag"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Warning: could not parse image path '{Image}'. Not pushing it to a docker registry, just including it in the 'deployment' field as-is.",
            "message": "Warning: could not parse image path '{Image}'. Not pushing it to a docker registry, just including it in the 'deployment' field as-is.",
            "translation": "Warning: could not parse image path '{Image}'. Not pushing it to a docker registry, just including it in the 'deployment' field as-is.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Image",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "image"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "no service name",
            "message": "no service name",
            "translation": "no service name",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "no docker image for service {ServiceName}",
            "message": "no docker image for service {ServiceName}",
            "translation": "no docker image for service {ServiceName}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to marshal body for {D}: {Err}",
            "message": "failed to marshal body for {D}: {Err}",
            "translation": "failed to marshal body for {D}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "D",
                    "string": "%[1]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "d"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "failed to unmarshal json for deployment field {StringjsonBytes}: {Err}",
            "message": "failed to unmarshal json for deployment field {StringjsonBytes}: {Err}",
            "translation": "failed to unmarshal json for deployment field {StringjsonBytes}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "StringjsonBytes",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "string(jsonBytes)"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "user input {Name} has no default value and is not set",
            "message": "user input {Name} has no default value and is not set",
            "translation": "user input {Name} has no default value and is not set",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ui.Name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "'userInput' is not supported for cluster type service.",
            "message": "'userInput' is not supported for cluster type service.",
            "translation": "'userInput' is not supported for cluster type service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "'requiredServices' is not supported for cluster type service.",
            "message": "'requiredServices' is not supported for cluster type service.",
            "translation": "'requiredServices' is not supported for cluster type service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Failed to convert version {Ver} for service {ReqSvc} to version range expression.",
            "message": "Failed to convert version {Ver} for service {ReqSvc} to version range expression.",
            "translation": "Failed to convert version {Ver} for service {ReqSvc} to version range expression.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Ver",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ver"
                },
                {
                    "id": "ReqSvc",
                    "string": "%[2]v",
                    "type": "github.com/open-horizon/anax/exchange.ServiceDependency",
                    "underlyingType": "struct{URL string \"json:\\\"url\\\"\"; Org string \"json:\\\"org\\\"\"; Version string \"json:\\\"version,omitempty\\\"\"; VersionRange string \"json:\\\"versionRange\\\"\"; Arch string \"json:\\\"arch\\\"\"}",
                    "argNum": 2,
                    "expr": "reqSvc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error retrieving service from the exchange for {ReqSvc}. {Err}",
            "message": "Error retrieving service from the exchange for {ReqSvc}. {Err}",
            "translation": "Error retrieving service from the exchange for {ReqSvc}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ReqSvc",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/exchange.ServiceDependency",
                    "underlyingType": "struct{URL string \"json:\\\"url\\\"\"; Org string \"json:\\\"org\\\"\"; Version string \"json:\\\"version,omitempty\\\"\"; VersionRange string \"json:\\\"versionRange\\\"\"; Arch string \"json:\\\"arch\\\"\"}",
                    "argNum": 1,
                    "expr": "reqSvc"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The required service {SId} has the wrong service type: {SType}.",
            "message": "The required service {SId} has the wrong service type: {SType}.",
            "translation": "The required service {SId} has the wrong service type: {SType}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sId"
                },
                {
                    "id": "SType",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "sType"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The depended service {Id} for the required service {SId} has the wrong service type: {SType1}.",
            "message": "The depended service {Id} for the required service {SId} has the wrong service type: {SType1}.",
            "translation": "The depended service {Id} for the required service {SId} has the wrong service type: {SType1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Id",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "id"
                },
                {
                    "id": "SId",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "sId"
                },
                {
                    "id": "SType1",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "sType1"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Bussiness policy and pattern are mutually exclusive.",
            "message": "Bussiness policy and pattern are mutually exclusive.",
            "translation": "Bussiness policy and pattern are mutually exclusive.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Neither deployment policy nor pattern is specified.",
            "message": "Neither deployment policy nor pattern is specified.",
            "translation": "Neither deployment policy nor pattern is specified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Incompatible",
            "message": "Incompatible",
            "translation": "Incompatible",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Compatible",
            "message": "Compatible",
            "translation": "Compatible",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Error marshaling object {In}. {Arg_2}",
            "message": "Error marshaling object {In}. {Arg_2}",
            "translation": "Error marshaling object {In}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "In",
                    "string": "%[1]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "in"
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to convert input to PolicyCheck object. {Err}",
            "message": "Failed to convert input to PolicyCheck object. {Err}",
            "translation": "Failed to convert input to PolicyCheck object. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The given node id is empty.",
            "message": "The given node id is empty.",
            "translation": "The given node id is empty.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Organization is not specified in the given node id: {NodeId}.",
            "message": "Organization is not specified in the given node id: {NodeId}.",
            "translation": "Organization is not specified in the given node id: {NodeId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting node {NodeId} from the exchange. {Err}",
            "message": "Error getting node {NodeId} from the exchange. {Err}",
            "translation": "Error getting node {NodeId} from the exchange. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No node found for this node id {NodeId}.",
            "message": "No node found for this node id {NodeId}.",
            "translation": "No node found for this node id {NodeId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to find definition for dependent services of {TopSvcId}. Compatability of {PROPNODEPRIVILEGED} cannot be fully evaluated until all services are in the exchange.",
            "message": "Failed to find definition for dependent services of {TopSvcId}. Compatability of {PROPNODEPRIVILEGED} cannot be fully evaluated until all services are in the exchange.",
            "translation": "Failed to find definition for dependent services of {TopSvcId}. Compatability of {PROPNODEPRIVILEGED} cannot be fully evaluated until all services are in the exchange.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TopSvcId",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "topSvcId"
                },
                {
                    "id": "PROPNODEPRIVILEGED",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "externalpolicy.PROP_NODE_PRIVILEGED"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error unmarshaling deployment string to internal deployment structure: {Err}",
            "message": "Error unmarshaling deployment string to internal deployment structure: {Err}",
            "translation": "Error unmarshaling deployment string to internal deployment structure: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalid node type: {NodeType}. It must be 'device' or 'cluster'.",
            "message": "Invalid node type: {NodeType}. It must be 'device' or 'cluster'.",
            "translation": "Invalid node type: {NodeType}. It must be 'device' or 'cluster'.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeType",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeType"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The input node type '{NodeType}' does not match the node type '{ExchNodeType}' from the node {NodeId}.",
            "message": "The input node type '{NodeType}' does not match the node type '{ExchNodeType}' from the node {NodeId}.",
            "translation": "The input node type '{NodeType}' does not match the node type '{ExchNodeType}' from the node {NodeId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeType",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeType"
                },
                {
                    "id": "ExchNodeType",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "exchNodeType"
                },
                {
                    "id": "NodeId",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service does not have deployment configuration for node type 'device'.",
            "message": "Service does not have deployment configuration for node type 'device'.",
            "translation": "Service does not have deployment configuration for node type 'device'.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Service does not have cluster deployment configuration for node type 'cluster'.",
            "message": "Service does not have cluster deployment configuration for node type 'cluster'.",
            "translation": "Service does not have cluster deployment configuration for node type 'cluster'.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The PolicyCheck input cannot be null",
            "message": "The PolicyCheck input cannot be null",
            "translation": "The PolicyCheck input cannot be null",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The input node architecture {NodeArch} does not match the exchange node architecture {Arch} for node {NodeId}.",
            "message": "The input node architecture {NodeArch} does not match the exchange node architecture {Arch} for node {NodeId}.",
            "translation": "The input node architecture {NodeArch} does not match the exchange node architecture {Arch} for node {NodeId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeArch",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "input.NodeArch"
                },
                {
                    "id": "Arch",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "node.Arch"
                },
                {
                    "id": "NodeId",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Policy Incompatible",
            "message": "Policy Incompatible",
            "translation": "Policy Incompatible",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Architecture does not match.",
            "message": "Architecture does not match.",
            "translation": "Architecture does not match.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Failed to get services for all archetctures for {Org}/{WorkloadURL} version {Version}. {Err}",
            "message": "Failed to get services for all archetctures for {Org}/{WorkloadURL} version {Version}. {Err}",
            "translation": "Failed to get services for all archetctures for {Org}/{WorkloadURL} version {Version}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "workload.Org"
                },
                {
                    "id": "WorkloadURL",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "workload.WorkloadURL"
                },
                {
                    "id": "Version",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "workload.Version"
                },
                {
                    "id": "Err",
                    "string": "%[4]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 4,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to validate the service policy. {Err}",
            "message": "Failed to validate the service policy. {Err}",
            "translation": "Failed to validate the service policy. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service with 'arch' {NodeArch} cannot be found in the deployment policy.",
            "message": "Service with 'arch' {NodeArch} cannot be found in the deployment policy.",
            "translation": "Service with 'arch' {NodeArch} cannot be found in the deployment policy.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeArch",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "resources.NodeArch"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No services found in the deployment policy.",
            "message": "No services found in the deployment policy.",
            "translation": "No services found in the deployment policy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Node policy cannot be null.",
            "message": "Node policy cannot be null.",
            "translation": "Node policy cannot be null.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Deployment policy cannot be null.",
            "message": "Deployment policy cannot be null.",
            "translation": "Deployment policy cannot be null.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Merged service policy cannot be null.",
            "message": "Merged service policy cannot be null.",
            "translation": "Merged service policy cannot be null.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Error merging node policy with arch property. {Err}",
            "message": "Error merging node policy with arch property. {Err}",
            "translation": "Error merging node policy with arch property. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to validate the node policy. {Err}",
            "message": "Failed to validate the node policy. {Err}",
            "translation": "Failed to validate the node policy. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to convert node policy to internal policy format for node {NodeId}: {Err}",
            "message": "Failed to convert node policy to internal policy format for node {NodeId}: {Err}",
            "translation": "Failed to convert node policy to internal policy format for node {NodeId}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No node policy found for this node {NodeId}.",
            "message": "No node policy found for this node {NodeId}.",
            "translation": "No node policy found for this node {NodeId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Neither node policy nor node id is specified.",
            "message": "Neither node policy nor node id is specified.",
            "translation": "Neither node policy nor node id is specified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Node id is empty.",
            "message": "Node id is empty.",
            "translation": "Node id is empty.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Organization is not specified in the node id: {NodeId}.",
            "message": "Organization is not specified in the node id: {NodeId}.",
            "translation": "Organization is not specified in the node id: {NodeId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error trying to query node policy for {NodeId}: {Err}",
            "message": "Error trying to query node policy for {NodeId}: {Err}",
            "translation": "Error trying to query node policy for {NodeId}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to validate the node policy for node {NodeId}. {Err}",
            "message": "Failed to validate the node policy for node {NodeId}. {Err}",
            "translation": "Failed to validate the node policy for node {NodeId}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to convert node policy to internal policy for node {NodeId}: {Err}",
            "message": "Failed to convert node policy to internal policy for node {NodeId}: {Err}",
            "translation": "Failed to convert node policy to internal policy for node {NodeId}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "nodeId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to convert deployment policy {BpId} to internal policy: {Err1}",
            "message": "Failed to convert deployment policy {BpId} to internal policy: {Err1}",
            "translation": "Failed to convert deployment policy {BpId} to internal policy: {Err1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "BpId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "bpId"
                },
                {
                    "id": "Err1",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err1"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Validation failure for deployment policy {BpId}. {Err}",
            "message": "Validation failure for deployment policy {BpId}. {Err}",
            "translation": "Validation failure for deployment policy {BpId}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "BpId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "bpId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No services specified in the given deployment policy {BpId}.",
            "message": "No services specified in the given deployment policy {BpId}.",
            "translation": "No services specified in the given deployment policy {BpId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "BpId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "bpId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No services specified in the deployment policy {Name}.",
            "message": "No services specified in the deployment policy {Name}.",
            "translation": "No services specified in the deployment policy {Name}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "pPolicy.Header.Name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Neither deployment policy nor deployment policy id is specified.",
            "message": "Neither deployment policy nor deployment policy id is specified.",
            "translation": "Neither deployment policy nor deployment policy id is specified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Deployment policy id is empty.",
            "message": "Deployment policy id is empty.",
            "translation": "Deployment policy id is empty.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Organization is not specified in the deployment policy id: {BpId}.",
            "message": "Organization is not specified in the deployment policy id: {BpId}.",
            "translation": "Organization is not specified in the deployment policy id: {BpId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "BpId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "bpId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to get deployment policy for {BpId}, {Err}",
            "message": "Unable to get deployment policy for {BpId}, {Err}",
            "translation": "Unable to get deployment policy for {BpId}, {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "BpId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "bpId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No deployment policy found for this id {BpId}.",
            "message": "No deployment policy found for this id {BpId}.",
            "translation": "No deployment policy found for this id {BpId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "BpId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "bpId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to convert deployment policy {BpId} to internal policy format: {Err}",
            "message": "Failed to convert deployment policy {BpId} to internal policy format: {Err}",
            "translation": "Failed to convert deployment policy {BpId} to internal policy format: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "BpId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "bpId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service policy id is empty.",
            "message": "Service policy id is empty.",
            "translation": "Service policy id is empty.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Organization is not specified in the service policy id: {SvcId}.",
            "message": "Organization is not specified in the service policy id: {SvcId}.",
            "translation": "Organization is not specified in the service policy id: {SvcId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SvcId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svcId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error trying to query service policy for service id {SvcId}: {Err}",
            "message": "Error trying to query service policy for service id {SvcId}: {Err}",
            "translation": "Error trying to query service policy for service id {SvcId}: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SvcId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svcId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error validating the service policy {SvcId}. {Err}",
            "message": "Error validating the service policy {SvcId}. {Err}",
            "translation": "Error validating the service policy {SvcId}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SvcId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svcId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service name is empty.",
            "message": "Service name is empty.",
            "translation": "Service name is empty.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Service organization is empty.",
            "message": "Service organization is empty.",
            "translation": "Service organization is empty.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Error trying to query service policy for {SvcOrg}/{SvcUrl} {SvcVersion} {SvcArch}. {Err}",
            "message": "Error trying to query service policy for {SvcOrg}/{SvcUrl} {SvcVersion} {SvcArch}. {Err}",
            "translation": "Error trying to query service policy for {SvcOrg}/{SvcUrl} {SvcVersion} {SvcArch}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SvcOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svcOrg"
                },
                {
                    "id": "SvcUrl",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "svcUrl"
                },
                {
                    "id": "SvcVersion",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "svcVersion"
                },
                {
                    "id": "SvcArch",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "svcArch"
                },
                {
                    "id": "Err",
                    "string": "%[5]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 5,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to validate the service policy for {SvcOrg}/{SvcUrl} {SvcVersion} {SvcArch}. {Err}",
            "message": "Failed to validate the service policy for {SvcOrg}/{SvcUrl} {SvcVersion} {SvcArch}. {Err}",
            "translation": "Failed to validate the service policy for {SvcOrg}/{SvcUrl} {SvcVersion} {SvcArch}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SvcOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svcOrg"
                },
                {
                    "id": "SvcUrl",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "svcUrl"
                },
                {
                    "id": "SvcVersion",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "svcVersion"
                },
                {
                    "id": "SvcArch",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "svcArch"
                },
                {
                    "id": "Err",
                    "string": "%[5]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 5,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The given deployment policy should not be null.",
            "message": "The given deployment policy should not be null.",
            "translation": "The given deployment policy should not be null.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Error merging deployment policy with service policy. {Err}",
            "message": "Error merging deployment policy with service policy. {Err}",
            "translation": "Error merging deployment policy with service policy. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The deployment policy should not be null.",
            "message": "The deployment policy should not be null.",
            "translation": "The deployment policy should not be null.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Deployment policy {Header} cannot have {PROPNODEPRIVILEGED}=true when referring to a service that requires privilege to run.",
            "message": "Deployment policy {Header} cannot have {PROPNODEPRIVILEGED}=true when referring to a service that requires privilege to run.",
            "translation": "Deployment policy {Header} cannot have {PROPNODEPRIVILEGED}=true when referring to a service that requires privilege to run.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Header",
                    "string": "%[1]s",
                    "type": "github.com/open-horizon/anax/policy.PolicyHeader",
                    "underlyingType": "struct{Name string \"json:\\\"name\\\"\"; Version string \"json:\\\"version\\\"\"}",
                    "argNum": 1,
                    "expr": "businessPol.Header"
                },
                {
                    "id": "PROPNODEPRIVILEGED",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "externalpolicy.PROP_NODE_PRIVILEGED"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error retrieving service {Org}/{WorkloadURL} {Version} {Arch} and its dependents from the exchange. {Err}",
            "message": "Error retrieving service {Org}/{WorkloadURL} {Version} {Arch} and its dependents from the exchange. {Err}",
            "translation": "Error retrieving service {Org}/{WorkloadURL} {Version} {Arch} and its dependents from the exchange. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "workload.Org"
                },
                {
                    "id": "WorkloadURL",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "workload.WorkloadURL"
                },
                {
                    "id": "Version",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "workload.Version"
                },
                {
                    "id": "Arch",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "workload.Arch"
                },
                {
                    "id": "Err",
                    "string": "%[5]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 5,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to marshal deployment configuration for service {SIdTop}, error {Err}",
            "message": "Failed to marshal deployment configuration for service {SIdTop}, error {Err}",
            "translation": "Failed to marshal deployment configuration for service {SIdTop}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SIdTop",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sIdTop"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to marshal cluster deployment configuration for service {SIdTop}, error {Err}",
            "message": "Failed to marshal cluster deployment configuration for service {SIdTop}, error {Err}",
            "translation": "Failed to marshal cluster deployment configuration for service {SIdTop}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SIdTop",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sIdTop"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Unable to find service definition from the input services.",
            "message": "Unable to find service definition from the input services.",
            "translation": "Unable to find service definition from the input services.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Unable to create version expression from {Version}. {Err}",
            "message": "Unable to create version expression from {Version}. {Err}",
            "translation": "Unable to create version expression from {Version}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Version",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sDep.Version"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error retrieving dependent services from the exchange for {SDep}. {Err}",
            "message": "Error retrieving dependent services from the exchange for {SDep}. {Err}",
            "translation": "Error retrieving dependent services from the exchange for {SDep}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SDep",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/exchange.ServiceDependency",
                    "underlyingType": "struct{URL string \"json:\\\"url\\\"\"; Org string \"json:\\\"org\\\"\"; Version string \"json:\\\"version,omitempty\\\"\"; VersionRange string \"json:\\\"versionRange\\\"\"; Arch string \"json:\\\"arch\\\"\"}",
                    "argNum": 1,
                    "expr": "sDep"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The UserInputCheck input cannot be null",
            "message": "The UserInputCheck input cannot be null",
            "translation": "The UserInputCheck input cannot be null",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Neither node user input nor node id is specified.",
            "message": "Neither node user input nor node id is specified.",
            "translation": "Neither node user input nor node id is specified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "No service versions with architecture {NodeArch} specified in the deployment policy or pattern.",
            "message": "No service versions with architecture {NodeArch} specified in the deployment policy or pattern.",
            "translation": "No service versions with architecture {NodeArch} specified in the deployment policy or pattern.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeArch",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "resources.NodeArch"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No service versions specified in the deployment policy or pattern.",
            "message": "No service versions specified in the deployment policy or pattern.",
            "translation": "No service versions specified in the deployment policy or pattern.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "User Input Incompatible",
            "message": "User Input Incompatible",
            "translation": "User Input Incompatible",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Error getting services for all archetctures for {ServiceOrg}/{ServiceURL} version {Version}. {Err}",
            "message": "Error getting services for all archetctures for {ServiceOrg}/{ServiceURL} version {Version}. {Err}",
            "translation": "Error getting services for all archetctures for {ServiceOrg}/{ServiceURL} version {Version}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceOrg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "serviceRef.ServiceOrg"
                },
                {
                    "id": "ServiceURL",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "serviceRef.ServiceURL"
                },
                {
                    "id": "Version",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "workload.Version"
                },
                {
                    "id": "Err",
                    "string": "%[4]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 4,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service definition not found in the input.",
            "message": "Service definition not found in the input.",
            "translation": "Service definition not found in the input.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Warning: checking node user input:  {Err}",
            "message": "Warning: checking node user input:  {Err}",
            "translation": "Warning: checking node user input:  {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Warning: checking user input for the deployment policy: {Err}",
            "message": "Warning: checking user input for the deployment policy: {Err}",
            "translation": "Warning: checking user input for the deployment policy: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Warning: checking user input for the pattern: {Err}",
            "message": "Warning: checking user input for the pattern: {Err}",
            "translation": "Warning: checking user input for the pattern: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service with 'arch' {NodeArch} cannot be found in the deployment policy or pattern.",
            "message": "Service with 'arch' {NodeArch} cannot be found in the deployment policy or pattern.",
            "translation": "Service with 'arch' {NodeArch} cannot be found in the deployment policy or pattern.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NodeArch",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "resources.NodeArch"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No services found in the deployment policy or pattern.",
            "message": "No services found in the deployment policy or pattern.",
            "translation": "No services found in the deployment policy or pattern.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "The input service spec object cannot be null.",
            "message": "The input service spec object cannot be null.",
            "translation": "The input service spec object cannot be null.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Error verifing user input for service {SId}. {Err}",
            "message": "Error verifing user input for service {SId}. {Err}",
            "translation": "Error verifing user input for service {SId}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to verify user input for service {SId}. {Reason}",
            "message": "Failed to verify user input for service {SId}. {Reason}",
            "translation": "Failed to verify user input for service {SId}. {Reason}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sId"
                },
                {
                    "id": "Reason",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "reason"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error verifing user input for dependent service {Id}. {Err}",
            "message": "Error verifing user input for dependent service {Id}. {Err}",
            "translation": "Error verifing user input for dependent service {Id}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Id",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "id"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Failed to verify user input for dependent service {Id}. {Reason}",
            "message": "Failed to verify user input for dependent service {Id}. {Reason}",
            "translation": "Failed to verify user input for dependent service {Id}. {Reason}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Id",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "id"
                },
                {
                    "id": "Reason",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "reason"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The input service definition object cannot be null.",
            "message": "The input service definition object cannot be null.",
            "translation": "The input service definition object cannot be null.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Failed to get the service from the exchange. {Err}",
            "message": "Failed to get the service from the exchange. {Err}",
            "translation": "Failed to get the service from the exchange. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Servcie does not exist on the exchange.",
            "message": "Servcie does not exist on the exchange.",
            "translation": "Servcie does not exist on the exchange.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "No user input found for service.",
            "message": "No user input found for service.",
            "translation": "No user input found for service.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Failed to validate the user input type for variable {Name}. {Err}",
            "message": "Failed to validate the user input type for variable {Name}. {Err}",
            "translation": "Failed to validate the user input type for variable {Name}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ui.Name"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "A required user input value is missing for variable {Name}.",
            "message": "A required user input value is missing for variable {Name}.",
            "translation": "A required user input value is missing for variable {Name}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ui.Name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{Errmsg} Service {Org}/{URL} version {Version} arch {Arch} is missing in the node user input.",
            "message": "{Errmsg} Service {Org}/{URL} version {Version} arch {Arch} is missing in the node user input.",
            "translation": "{Errmsg} Service {Org}/{URL} version {Version} arch {Arch} is missing in the node user input.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Errmsg",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "err_msg"
                },
                {
                    "id": "Org",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "sdef.GetOrg()"
                },
                {
                    "id": "URL",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "sdef.GetURL()"
                },
                {
                    "id": "Version",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "sdef.GetVersion()"
                },
                {
                    "id": "Arch",
                    "string": "%[5]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 5,
                    "expr": "sdef.GetArch()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service URL {URL} does not match the service URL {Name} specified in the deployment policy.",
            "message": "Service URL {URL} does not match the service URL {Name} specified in the deployment policy.",
            "translation": "Service URL {URL} does not match the service URL {Name} specified in the deployment policy.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "URL",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "service.GetURL()"
                },
                {
                    "id": "Name",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "bPolicy.Service.Name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service Org {Org} does not match the service org {Org_1} specified in the deployment policy.",
            "message": "Service Org {Org} does not match the service org {Org_1} specified in the deployment policy.",
            "translation": "Service Org {Org} does not match the service org {Org_1} specified in the deployment policy.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Org",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "service.GetOrg()"
                },
                {
                    "id": "Org_1",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "bPolicy.Service.Org"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service architecure {Arch} does not match the service architectrure {Arch_1} specified in the deployment policy.",
            "message": "Service architecure {Arch} does not match the service architectrure {Arch_1} specified in the deployment policy.",
            "translation": "Service architecure {Arch} does not match the service architectrure {Arch_1} specified in the deployment policy.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arch",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "service.GetArch()"
                },
                {
                    "id": "Arch_1",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "bPolicy.Service.Arch"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Service version {Version} does not match any service versions specified in the deployment policy.",
            "message": "Service version {Version} does not match any service versions specified in the deployment policy.",
            "translation": "Service version {Version} does not match any service versions specified in the deployment policy.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Version",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "service.GetVersion()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The service does not match any services in the pattern.",
            "message": "The service does not match any services in the pattern.",
            "translation": "The service does not match any services in the pattern.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Pattern {PatId} cannot be found on the exchange.",
            "message": "Pattern {PatId} cannot be found on the exchange.",
            "translation": "Pattern {PatId} cannot be found on the exchange.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PatId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "patId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Neither pattern nor pattern id is specified.",
            "message": "Neither pattern nor pattern id is specified.",
            "translation": "Neither pattern nor pattern id is specified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Pattern id is empty.",
            "message": "Pattern id is empty.",
            "translation": "Pattern id is empty.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Organization is not specified in the pattern id: {PatId}.",
            "message": "Organization is not specified in the pattern id: {PatId}.",
            "translation": "Organization is not specified in the pattern id: {PatId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PatId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "patId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Error getting pattern {PatId} from the exchange, {Err}",
            "message": "Error getting pattern {PatId} from the exchange, {Err}",
            "translation": "Error getting pattern {PatId} from the exchange, {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PatId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "patId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "No pattern found for this id {PatId}.",
            "message": "No pattern found for this id {PatId}.",
            "translation": "No pattern found for this id {PatId}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PatId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "patId"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "URL must be specified in the service definition.",
            "message": "URL must be specified in the service definition.",
            "translation": "URL must be specified in the service definition.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Version must be specified in the service definition for service {URL}.",
            "message": "Version must be specified in the service definition for service {URL}.",
            "translation": "Version must be specified in the service definition for service {URL}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "URL",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svc.GetURL()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Invalide version format {Version} for service {URL}.",
            "message": "Invalide version format {Version} for service {URL}.",
            "translation": "Invalide version format {Version} for service {URL}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Version",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svc.GetVersion()"
                },
                {
                    "id": "URL",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "svc.GetURL()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Arch must be specified in the service definition for service {URL}.",
            "message": "Arch must be specified in the service definition for service {URL}.",
            "translation": "Arch must be specified in the service definition for service {URL}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "URL",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svc.GetURL()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Org must be specified in the service definition for service {URL}.",
            "message": "Org must be specified in the service definition for service {URL}.",
            "translation": "Org must be specified in the service definition for service {URL}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "URL",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "svc.GetURL()"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Validation failure for input service {SId}. {Err}",
            "message": "Validation failure for input service {SId}. {Err}",
            "translation": "Validation failure for input service {SId}. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SId",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "sId"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The service {ServiceOrgid}/{ServiceUrl} version {ServiceVersionRange} arch {ServiceArch} specified in the user input is not referenced by the pattern or deployment policy. Please make sure the serviceOrgid, serviceUrl, serviceArch and serviceVersionRange are correct.",
            "message": "The service {ServiceOrgid}/{ServiceUrl} version {ServiceVersionRange} arch {ServiceArch} specified in the user input is not referenced by the pattern or deployment policy. Please make sure the serviceOrgid, serviceUrl, serviceArch and serviceVersionRange are correct.",
            "translation": "The service {ServiceOrgid}/{ServiceUrl} version {ServiceVersionRange} arch {ServiceArch} specified in the user input is not referenced by the pattern or deployment policy. Please make sure the serviceOrgid, serviceUrl, serviceArch and serviceVersionRange are correct.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceOrgid",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "userInput[0].ServiceOrgid"
                },
                {
                    "id": "ServiceUrl",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "userInput[0].ServiceUrl"
                },
                {
                    "id": "ServiceVersionRange",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "userInput[0].ServiceVersionRange"
                },
                {
                    "id": "ServiceArch",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "userInput[0].ServiceArch"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The service {ServiceOrgid}/{ServiceUrl} version {ServiceVersionRange} arch {ServiceArch} specified in the user input is not referenced by the pattern or deployment policy. Please make sure the service specification is correct.",
            "message": "The service {ServiceOrgid}/{ServiceUrl} version {ServiceVersionRange} arch {ServiceArch} specified in the user input is not referenced by the pattern or deployment policy. Please make sure the service specification is correct.",
            "translation": "The service {ServiceOrgid}/{ServiceUrl} version {ServiceVersionRange} arch {ServiceArch} specified in the user input is not referenced by the pattern or deployment policy. Please make sure the service specification is correct.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServiceOrgid",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "userInput[i].ServiceOrgid"
                },
                {
                    "id": "ServiceUrl",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "userInput[i].ServiceUrl"
                },
                {
                    "id": "ServiceVersionRange",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "userInput[i].ServiceVersionRange"
                },
                {
                    "id": "ServiceArch",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "userInput[i].ServiceArch"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Variable {Name} for service {ServiceOrgid}/{ServiceUrl} version {ServiceVersionRange} arch {ServiceArch} specified in the user input is not used. Please make sure it is a correct name.",
            "message": "Variable {Name} for service {ServiceOrgid}/{ServiceUrl} version {ServiceVersionRange} arch {ServiceArch} specified in the user input is not used. Please make sure it is a correct name.",
            "translation": "Variable {Name} for service {ServiceOrgid}/{ServiceUrl} version {ServiceVersionRange} arch {ServiceArch} specified in the user input is not used. Please make sure it is a correct name.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "uui.Name"
                },
                {
                    "id": "ServiceOrgid",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "userInput[i].ServiceOrgid"
                },
                {
                    "id": "ServiceUrl",
                    "string": "%[3]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "userInput[i].ServiceUrl"
                },
                {
                    "id": "ServiceVersionRange",
                    "string": "%[4]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "userInput[i].ServiceVersionRange"
                },
                {
                    "id": "ServiceArch",
                    "string": "%[5]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 5,
                    "expr": "userInput[i].ServiceArch"
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_DEPLOYCONF_UNSUPPORT_CAP_FOR_WL",
                "Deployment config {Arg_1} contains unsupported capability for a workload"
            ],
            "message": "Deployment config {Arg_1} contains unsupported capability for a workload",
            "translation": "Deployment config {Arg_1} contains unsupported capability for a workload",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_DEPLOYCONF_UNSUPPORT_CAP_FOR_CONT",
                "Deployment config {Arg_1} contains unsupported capability for infrastructure container."
            ],
            "message": "Deployment config {Arg_1} contains unsupported capability for infrastructure container.",
            "translation": "Deployment config {Arg_1} contains unsupported capability for infrastructure container.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_DEPLOYCONF_UNSUPPORT_BIND",
                "Deployment config {Arg_1} contains unsupported bind for a workload, {Arg_2}"
            ],
            "message": "Deployment config {Arg_1} contains unsupported bind for a workload, {Arg_2}",
            "translation": "Deployment config {Arg_1} contains unsupported bind for a workload, {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_DEPLOYCONF_UNSUPPORT_BIND_FOR",
                "Deployment config {Arg_1} contains unsupported bind for {Arg_2}, {Arg_3}"
            ],
            "message": "Deployment config {Arg_1} contains unsupported bind for {Arg_2}, {Arg_3}",
            "translation": "Deployment config {Arg_1} contains unsupported bind for {Arg_2}, {Arg_3}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_ERROR_UNMARSHAL_DEPLOY",
                "Error Unmarshalling deployment string {Arg_1}, error: {Arg_2}"
            ],
            "message": "Error Unmarshalling deployment string {Arg_1}, error: {Arg_2}",
            "translation": "Error Unmarshalling deployment string {Arg_1}, error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_ERROR_UNMARSHAL_DEPLOY_OVERRIDE",
                "Error Unmarshalling deployment override string {Arg_1} for agreement {Arg_2}, error: {Arg_3}"
            ],
            "message": "Error Unmarshalling deployment override string {Arg_1} for agreement {Arg_2}, error: {Arg_3}",
            "translation": "Error Unmarshalling deployment override string {Arg_1} for agreement {Arg_2}, error: {Arg_3}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_START_CONTAINER_ERROR",
                "Error starting containers: {Arg_1}"
            ],
            "message": "Error starting containers: {Arg_1}",
            "translation": "Error starting containers: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_START_CONTAINER_ERROR_FOR_AG",
                "Error starting containers for agreement {Arg_1}: {Arg_2}"
            ],
            "message": "Error starting containers for agreement {Arg_1}: {Arg_2}",
            "translation": "Error starting containers for agreement {Arg_1}: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_RESTART_CONTAINER_ERROR_FOR_AG",
                "Error restarting containers for agreements {Arg_1}: {Arg_2}"
            ],
            "message": "Error restarting containers for agreements {Arg_1}: {Arg_2}",
            "translation": "Error restarting containers for agreements {Arg_1}: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_CLEAN_OLD_CONTAINER_ERROR",
                "Error cleaning up old containers before starting up new containers for {Arg_1}. Error: {Arg_2}"
            ],
            "message": "Error cleaning up old containers before starting up new containers for {Arg_1}. Error: {Arg_2}",
            "translation": "Error cleaning up old containers before starting up new containers for {Arg_1}. Error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_FAIL_GET_PAENT_CONT_FOR_SVC",
                "Failed to get a list of parent containers for service retry for {Arg_1}. {Arg_2}"
            ],
            "message": "Failed to get a list of parent containers for service retry for {Arg_1}. {Arg_2}",
            "translation": "Failed to get a list of parent containers for service retry for {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_FAIL_RESTORE_NW_WITH_PARENT",
                "Failed to restoring the network connection with the parents for service {Arg_1}. {Arg_2}"
            ],
            "message": "Failed to restoring the network connection with the parents for service {Arg_1}. {Arg_2}",
            "translation": "Failed to restoring the network connection with the parents for service {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_TERM_UNABLE_ACCESS_STORAGE_DIR",
                "anax terminating. Unable to access service storage direcotry specified in config: {Arg_1}. {Arg_2}"
            ],
            "message": "anax terminating. Unable to access service storage direcotry specified in config: {Arg_1}. {Arg_2}",
            "translation": "anax terminating. Unable to access service storage direcotry specified in config: {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_TERM_UNABLE_INIT_IPTABLE_CLIENT",
                "anax terminating. Failed to instantiate iptables client. {Arg_1}"
            ],
            "message": "anax terminating. Failed to instantiate iptables client. {Arg_1}",
            "translation": "anax terminating. Failed to instantiate iptables client. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_CONT_TERM_UNABLE_INIT_DOCKER_CLIENT",
                "anax terminating. Failed to instantiate docker client. {Arg_1}"
            ],
            "message": "anax terminating. Failed to instantiate docker client. {Arg_1}",
            "translation": "anax terminating. Failed to instantiate docker client. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Property {PROPNODEPRIVILEGED} must have a boolean value (true or false).",
            "message": "Property {PROPNODEPRIVILEGED} must have a boolean value (true or false).",
            "translation": "Property {PROPNODEPRIVILEGED} must have a boolean value (true or false).",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PROPNODEPRIVILEGED",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "PROP_NODE_PRIVILEGED"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Property must include a name and a value: {Property}",
            "message": "Property must include a name and a value: {Property}",
            "translation": "Property must include a name and a value: {Property}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Property",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/externalpolicy.Property",
                    "underlyingType": "struct{Name string \"json:\\\"name\\\"\"; Value interface{} \"json:\\\"value\\\"\"; Type string \"json:\\\"type,omitempty\\\"\"}",
                    "argNum": 1,
                    "expr": "property"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Property {Name} has invalid property type {DeclaredType}. Allowed property types are: version, string, int, boolean, float, and list of strings.",
            "message": "Property {Name} has invalid property type {DeclaredType}. Allowed property types are: version, string, int, boolean, float, and list of strings.",
            "translation": "Property {Name} has invalid property type {DeclaredType}. Allowed property types are: version, string, int, boolean, float, and list of strings.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "property.Name"
                },
                {
                    "id": "DeclaredType",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "declaredType"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Property value is of type {ActualType}, expected type {DeclaredType}",
            "message": "Property value is of type {ActualType}, expected type {DeclaredType}",
            "translation": "Property value is of type {ActualType}, expected type {DeclaredType}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ActualType",
                    "string": "%[1]T",
                    "type": "bool",
                    "underlyingType": "bool",
                    "argNum": 1,
                    "expr": "actualType"
                },
                {
                    "id": "DeclaredType",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "declaredType"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Value {Value} of property {Name} is not an integer type",
            "message": "Value {Value} of property {Name} is not an integer type",
            "translation": "Value {Value} of property {Name} is not an integer type",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Value",
                    "string": "%[1]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "property.Value"
                },
                {
                    "id": "Name",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "property.Name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Value {Value} of property {Name} is not a valid string. Please define type or change value to a string.",
            "message": "Value {Value} of property {Name} is not a valid string. Please define type or change value to a string.",
            "translation": "Value {Value} of property {Name} is not a valid string. Please define type or change value to a string.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Value",
                    "string": "%[1]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "property.Value"
                },
                {
                    "id": "Name",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "property.Name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Property {Name} with value {Value} is not a valid verion string",
            "message": "Property {Name} with value {Value} is not a valid verion string",
            "translation": "Property {Name} with value {Value} is not a valid verion string",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "property.Name"
                },
                {
                    "id": "Value",
                    "string": "%[2]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 2,
                    "expr": "property.Value"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Property {Name} has invalid value type {ActualType}",
            "message": "Property {Name} has invalid value type {ActualType}",
            "translation": "Property {Name} has invalid value type {ActualType}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "property.Name"
                },
                {
                    "id": "ActualType",
                    "string": "%[2]T",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 2,
                    "expr": "actualType"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The constraint expression: {Dconstraints} is type {Dconstraints_1}, but is expected to be an array of strings",
            "message": "The constraint expression: {Dconstraints} is type {Dconstraints_1}, but is expected to be an array of strings",
            "translation": "The constraint expression: {Dconstraints} is type {Dconstraints_1}, but is expected to be an array of strings",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Dconstraints",
                    "string": "%[1]v",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 1,
                    "expr": "dconstraints"
                },
                {
                    "id": "Dconstraints_1",
                    "string": "%[2]T",
                    "type": "interface{}",
                    "underlyingType": "interface{}",
                    "argNum": 2,
                    "expr": "dconstraints"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "The constraint expression contains unmatched parentheses.",
            "message": "The constraint expression contains unmatched parentheses.",
            "translation": "The constraint expression contains unmatched parentheses.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_AG_FROM_DB",
                "Error retrieving agreement {Arg_1} from database, error {Arg_2}"
            ],
            "message": "Error retrieving agreement {Arg_1} from database, error {Arg_2}",
            "translation": "Error retrieving agreement {Arg_1} from database, error {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_AG_FROM_DB_FOR_MNM",
                "Unable to retrieve agreement {Arg_1} from database for MeteringNotification message, error {Arg_2}"
            ],
            "message": "Unable to retrieve agreement {Arg_1} from database for MeteringNotification message, error {Arg_2}",
            "translation": "Unable to retrieve agreement {Arg_1} from database for MeteringNotification message, error {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_AG_FROM_DB_FOR_CANM",
                "Unable to retrieve agreement {Arg_1} from database for Cancel message, error {Arg_2}"
            ],
            "message": "Unable to retrieve agreement {Arg_1} from database for Cancel message, error {Arg_2}",
            "translation": "Unable to retrieve agreement {Arg_1} from database for Cancel message, error {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_AG_FROM_DB_FOR_RAM",
                "Unable to retrieve agreement {Arg_1} from database for ReplyAck message, error {Arg_2}"
            ],
            "message": "Unable to retrieve agreement {Arg_1} from database for ReplyAck message, error {Arg_2}",
            "translation": "Unable to retrieve agreement {Arg_1} from database for ReplyAck message, error {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_AG_FROM_DB_FOR_DRM",
                "Unable to retrieve agreement {Arg_1} from database for DataReceived message, error {Arg_2}"
            ],
            "message": "Unable to retrieve agreement {Arg_1} from database for DataReceived message, error {Arg_2}",
            "translation": "Unable to retrieve agreement {Arg_1} from database for DataReceived message, error {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_UNARCHIVED_AG_FROM_DB",
                "Unable to retrieve unarchived agreements from database. {Arg_1}"
            ],
            "message": "Unable to retrieve unarchived agreements from database. {Arg_1}",
            "translation": "Unable to retrieve unarchived agreements from database. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_MARK_AG_TERMINATED_IN_DB",
                "Error marking agreement {Arg_1} terminated in database: {Arg_2}."
            ],
            "message": "Error marking agreement {Arg_1} terminated in database: {Arg_2}.",
            "translation": "Error marking agreement {Arg_1} terminated in database: {Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_SDEFS_FROM_DB",
                "Error getting service definitions {Arg_1} from db. {Arg_2}"
            ],
            "message": "Error getting service definitions {Arg_1} from db. {Arg_2}",
            "translation": "Error getting service definitions {Arg_1} from db. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_SINSTS_VER_FROM_DB",
                "Error retrieving all service instances from database for {Arg_1}/{Arg_2} version {Arg_3} key {Arg_4}. {Arg_5}"
            ],
            "message": "Error retrieving all service instances from database for {Arg_1}/{Arg_2} version {Arg_3} key {Arg_4}. {Arg_5}",
            "translation": "Error retrieving all service instances from database for {Arg_1}/{Arg_2} version {Arg_3} key {Arg_4}. {Arg_5}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                },
                {
                    "id": "Arg_4",
                    "string": "%[4]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 4
                },
                {
                    "id": "Arg_5",
                    "string": "%[5]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 5
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_SINSTS_FOR_FROM_DB",
                "Error retrieving all service instances from database for {Arg_1}. {Arg_2}"
            ],
            "message": "Error retrieving all service instances from database for {Arg_1}. {Arg_2}",
            "translation": "Error retrieving all service instances from database for {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_SINSTS_FROM_DB",
                "Error retrieving all service instances from database, error: {Arg_1}"
            ],
            "message": "Error retrieving all service instances from database, error: {Arg_1}",
            "translation": "Error retrieving all service instances from database, error: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_SINST_FROM_DB",
                "Error getting service instance {Arg_1} from db. {Arg_2}"
            ],
            "message": "Error getting service instance {Arg_1} from db. {Arg_2}",
            "translation": "Error getting service instance {Arg_1} from db. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_MATCH_AGS_FROM_DB",
                "Error retrieving matching agreements from database for workloads {Arg_1}. Error: {Arg_2}"
            ],
            "message": "Error retrieving matching agreements from database for workloads {Arg_1}. Error: {Arg_2}",
            "translation": "Error retrieving matching agreements from database for workloads {Arg_1}. Error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_SAVE_NODE_CONFIGSTATE_TO_DB",
                "Error perisisting node config state in database to {Arg_1}. Error: {Arg_2}"
            ],
            "message": "Error perisisting node config state in database to {Arg_1}. Error: {Arg_2}",
            "translation": "Error perisisting node config state in database to {Arg_1}. Error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_DEVICE_FROM_DB",
                "Error retrieving device from database. Error: {Arg_1}"
            ],
            "message": "Error retrieving device from database. Error: {Arg_1}",
            "translation": "Error retrieving device from database. Error: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_DEL_NODE_EXCH_PATTERN_FROM_DB",
                "Error deleting node exchange pattern from the local database. {Arg_1}"
            ],
            "message": "Error deleting node exchange pattern from the local database. {Arg_1}",
            "translation": "Error deleting node exchange pattern from the local database. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_RETRIEVE_NODE_FROM_EXCH",
                "Error retrieving node {Arg_1} from the exchange: {Arg_2}"
            ],
            "message": "Error retrieving node {Arg_1} from the exchange: {Arg_2}",
            "translation": "Error retrieving node {Arg_1} from the exchange: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_UPDATE_REGSVCS_IN_EXCH",
                "Error updating registeredServices for node {Arg_1} in the exchange: {Arg_2}"
            ],
            "message": "Error updating registeredServices for node {Arg_1} in the exchange: {Arg_2}",
            "translation": "Error updating registeredServices for node {Arg_1} in the exchange: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_IMAGE_LOADED",
                "Image loaded for {Arg_1}/{Arg_2}."
            ],
            "message": "Image loaded for {Arg_1}/{Arg_2}.",
            "translation": "Image loaded for {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_IMAGE_LOADED_FOR_SVC",
                "Image loaded for service {Arg_1}/{Arg_2}."
            ],
            "message": "Image loaded for service {Arg_1}/{Arg_2}.",
            "translation": "Image loaded for service {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_LOADING_IMG",
                "Error loading image for {Arg_1}/{Arg_2}."
            ],
            "message": "Error loading image for {Arg_1}/{Arg_2}.",
            "translation": "Error loading image for {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_LOADING_IMG_FOR_SVC",
                "Error loading image for service {Arg_1}/{Arg_2}."
            ],
            "message": "Error loading image for service {Arg_1}/{Arg_2}.",
            "translation": "Error loading image for service {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_START_TERM_AG_WITH_REASON",
                "Start terminating agreement for {Arg_1}. Termination reason: {Arg_2}"
            ],
            "message": "Start terminating agreement for {Arg_1}. Termination reason: {Arg_2}",
            "translation": "Start terminating agreement for {Arg_1}. Termination reason: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_AG_REACHED",
                "Agreement reached for service {Arg_1}. The agreement id is {Arg_2}."
            ],
            "message": "Agreement reached for service {Arg_1}. The agreement id is {Arg_2}.",
            "translation": "Agreement reached for service {Arg_1}. The agreement id is {Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_AG_NOT_VALID",
                "Agreement for {Arg_1} no longer valid on the agbot. Node will cancel it."
            ],
            "message": "Agreement for {Arg_1} no longer valid on the agbot. Node will cancel it.",
            "translation": "Agreement for {Arg_1} no longer valid on the agbot. Node will cancel it.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_WL_CONTAINER_UP",
                "Workload service containers for {Arg_1}/{Arg_2} are up and running."
            ],
            "message": "Workload service containers for {Arg_1}/{Arg_2} are up and running.",
            "translation": "Workload service containers for {Arg_1}/{Arg_2} are up and running.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_COMPLETE_TERM_AG_WITH_REASON",
                "Complete terminating agreement for {Arg_1}. Termination reason: {Arg_2}"
            ],
            "message": "Complete terminating agreement for {Arg_1}. Termination reason: {Arg_2}",
            "translation": "Complete terminating agreement for {Arg_1}. Termination reason: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_DEL_AG_IN_EXCH",
                "Error deleting agreement for {Arg_1} in exchange: {Arg_2}. Will retry."
            ],
            "message": "Error deleting agreement for {Arg_1} in exchange: {Arg_2}. Will retry.",
            "translation": "Error deleting agreement for {Arg_1} in exchange: {Arg_2}. Will retry.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_AG_VERIFICATION",
                "Encountered error for AgreementVerification for {Arg_1} with agbot, error {Arg_2}"
            ],
            "message": "Encountered error for AgreementVerification for {Arg_1} with agbot, error {Arg_2}",
            "translation": "Encountered error for AgreementVerification for {Arg_1} with agbot, error {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_REPLYACK_WILL_CANCEL_AG",
                "ReplyAck indicated that the agbot did not want to pursue the agreement for {Arg_1}. Node will cancel the agreement"
            ],
            "message": "ReplyAck indicated that the agbot did not want to pursue the agreement for {Arg_1}. Node will cancel the agreement",
            "translation": "ReplyAck indicated that the agbot did not want to pursue the agreement for {Arg_1}. Node will cancel the agreement",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_NODE_RECEIVED_CANCEL_MSG",
                "Node received Cancel message for {Arg_1}/{Arg_2} from agbot {Arg_3}."
            ],
            "message": "Node received Cancel message for {Arg_1}/{Arg_2} from agbot {Arg_3}.",
            "translation": "Node received Cancel message for {Arg_1}/{Arg_2} from agbot {Arg_3}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_HANDLE_REPLYACK_MSG_FOR_AG",
                "Error handling ReplyAck message for {Arg_1}. {Arg_2}"
            ],
            "message": "Error handling ReplyAck message for {Arg_1}. {Arg_2}",
            "translation": "Error handling ReplyAck message for {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_HANDLE_REPLYACK_MSG",
                "Error handling ReplyAck message. {Arg_1}"
            ],
            "message": "Error handling ReplyAck message. {Arg_1}",
            "translation": "Error handling ReplyAck message. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_HANDLE_DATARECEIVED_MSG_FOR_AG",
                "Error handling DataReceived message for {Arg_1}. {Arg_2}"
            ],
            "message": "Error handling DataReceived message for {Arg_1}. {Arg_2}",
            "translation": "Error handling DataReceived message for {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_HANDLE_DATARECEIVED_MSG",
                "Error handling DataReceived message. {Arg_1}"
            ],
            "message": "Error handling DataReceived message. {Arg_1}",
            "translation": "Error handling DataReceived message. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_HANDLE_METERING_MSG_FOR_AG",
                "Error handling MeterNotification message for {Arg_1}. {Arg_2}"
            ],
            "message": "Error handling MeterNotification message for {Arg_1}. {Arg_2}",
            "translation": "Error handling MeterNotification message for {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_HANDLE_METERING_MSG",
                "Error handling MeterNotification message. {Arg_1}"
            ],
            "message": "Error handling MeterNotification message. {Arg_1}",
            "translation": "Error handling MeterNotification message. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_HANDLE_CANCEL_MSG_FOR_AG",
                "Error handling Cancel message for {Arg_1}. {Arg_2}"
            ],
            "message": "Error handling Cancel message for {Arg_1}. {Arg_2}",
            "translation": "Error handling Cancel message for {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_HANDLE_CANCEL_MSG",
                "Error handling Cancel message. {Arg_1}"
            ],
            "message": "Error handling Cancel message. {Arg_1}",
            "translation": "Error handling Cancel message. {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_START_WORKLOAD_SVC",
                "Start workload service for {Arg_1}/{Arg_2}."
            ],
            "message": "Start workload service for {Arg_1}/{Arg_2}.",
            "translation": "Start workload service for {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_WORKLOAD_DESTROYED",
                "Workload destroyed for {Arg_1}"
            ],
            "message": "Workload destroyed for {Arg_1}",
            "translation": "Workload destroyed for {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_SVC_CONTAINER_STARTED",
                "Service containers for {Arg_1} started."
            ],
            "message": "Service containers for {Arg_1} started.",
            "translation": "Service containers for {Arg_1} started.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_COMPLETE_CLEANUP_SVC",
                "Complete cleaning up the service instance {Arg_1}."
            ],
            "message": "Complete cleaning up the service instance {Arg_1}.",
            "translation": "Complete cleaning up the service instance {Arg_1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_START_DEPENDENT_SVC",
                "Start dependent services for {Arg_1}/{Arg_2}."
            ],
            "message": "Start dependent services for {Arg_1}/{Arg_2}.",
            "translation": "Start dependent services for {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_START_DEPENDENT_SVC",
                "Encountered error starting dependen services for {Arg_1}/{Arg_2}. {Arg_3}"
            ],
            "message": "Encountered error starting dependen services for {Arg_1}/{Arg_2}. {Arg_3}",
            "translation": "Encountered error starting dependen services for {Arg_1}/{Arg_2}. {Arg_3}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_START_DEPENDENT_SVC_FOR_AG",
                "Error starting dependen service {Arg_1}/{Arg_2} version {Arg_3} for agreement {Arg_4}. {Arg_5}"
            ],
            "message": "Error starting dependen service {Arg_1}/{Arg_2} version {Arg_3} for agreement {Arg_4}. {Arg_5}",
            "translation": "Error starting dependen service {Arg_1}/{Arg_2} version {Arg_3} for agreement {Arg_4}. {Arg_5}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                },
                {
                    "id": "Arg_4",
                    "string": "%[4]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 4
                },
                {
                    "id": "Arg_5",
                    "string": "%[5]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 5
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_START_CLEANUP_SVC",
                "Start cleaning up service {Arg_1} because agreement {Arg_2} ended."
            ],
            "message": "Start cleaning up service {Arg_1} because agreement {Arg_2} ended.",
            "translation": "Start cleaning up service {Arg_1} because agreement {Arg_2} ended.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_START_SVC",
                "Error starting service {Arg_1}/{Arg_2} version {Arg_3}, error: {Arg_4}"
            ],
            "message": "Error starting service {Arg_1}/{Arg_2} version {Arg_3}, error: {Arg_4}",
            "translation": "Error starting service {Arg_1}/{Arg_2} version {Arg_3}, error: {Arg_4}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                },
                {
                    "id": "Arg_4",
                    "string": "%[4]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 4
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_GET_ALL_SVCS_FROM_AGS",
                "Error getting all the services from agreements: {Arg_1}"
            ],
            "message": "Error getting all the services from agreements: {Arg_1}",
            "translation": "Error getting all the services from agreements: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_START_AGLESS_SVC",
                "Start agreement-less service {Arg_1}/{Arg_2}."
            ],
            "message": "Start agreement-less service {Arg_1}/{Arg_2}.",
            "translation": "Start agreement-less service {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_COMPLETE_START_AGLESS_SVC",
                "Complete starting agreement-less service {Arg_1}/{Arg_2} and its dependents."
            ],
            "message": "Complete starting agreement-less service {Arg_1}/{Arg_2} and its dependents.",
            "translation": "Complete starting agreement-less service {Arg_1}/{Arg_2} and its dependents.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_START_AGLESS_SVC",
                "Unable to start agreement-less service {Arg_1}/{Arg_2}, error {Arg_3}"
            ],
            "message": "Unable to start agreement-less service {Arg_1}/{Arg_2}, error {Arg_3}",
            "translation": "Unable to start agreement-less service {Arg_1}/{Arg_2}, error {Arg_3}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_START_AGLESS_SVC_ERR_SEARCH_PATTERN",
                "Unable to start agreement-less services, error searching for pattern {Arg_1} in exchange, error: {Arg_2}"
            ],
            "message": "Unable to start agreement-less services, error searching for pattern {Arg_1} in exchange, error: {Arg_2}",
            "translation": "Unable to start agreement-less services, error searching for pattern {Arg_1} in exchange, error: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_START_AGLESS_SVC_ERR_PATTERN_NOT_FOUND",
                "Unable to start agreement-less services, pattern {Arg_1} not found in exchange"
            ],
            "message": "Unable to start agreement-less services, pattern {Arg_1} not found in exchange",
            "translation": "Unable to start agreement-less services, pattern {Arg_1} not found in exchange",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_START_AGLESS_SVC_ERR_SDEF_NOT_FOUND",
                "Unable to start agreement-less service {Arg_1}/{Arg_2}, local service definition not found"
            ],
            "message": "Unable to start agreement-less service {Arg_1}/{Arg_2}, local service definition not found",
            "translation": "Unable to start agreement-less service {Arg_1}/{Arg_2}, local service definition not found",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_START_UPGRADE",
                "Start upgrading service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}."
            ],
            "message": "Start upgrading service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}.",
            "translation": "Start upgrading service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                },
                {
                    "id": "Arg_4",
                    "string": "%[4]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 4
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_COMPLETE_UPGRADE",
                "Complete upgrading service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}."
            ],
            "message": "Complete upgrading service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}.",
            "translation": "Complete upgrading service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                },
                {
                    "id": "Arg_4",
                    "string": "%[4]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 4
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_FAILED_UPGRADE",
                "Failed to upgrade service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}, error: {Arg_5}"
            ],
            "message": "Failed to upgrade service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}, error: {Arg_5}",
            "translation": "Failed to upgrade service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}, error: {Arg_5}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                },
                {
                    "id": "Arg_4",
                    "string": "%[4]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 4
                },
                {
                    "id": "Arg_5",
                    "string": "%[5]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 5
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_START_DOWNGRADE_FOR_AG",
                "Start downgrading service {Arg_1}/{Arg_2} version {Arg_3} because service for agreement failed to start."
            ],
            "message": "Start downgrading service {Arg_1}/{Arg_2} version {Arg_3} because service for agreement failed to start.",
            "translation": "Start downgrading service {Arg_1}/{Arg_2} version {Arg_3} because service for agreement failed to start.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_START_DOWNGRADE",
                "Start downgrading service {Arg_1}/{Arg_2} version {Arg_3} because service failed to start."
            ],
            "message": "Start downgrading service {Arg_1}/{Arg_2} version {Arg_3} because service failed to start.",
            "translation": "Start downgrading service {Arg_1}/{Arg_2} version {Arg_3} because service failed to start.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_START_DOWNGRADE_BECAUSE_UPGRADE_FAILED",
                "Start downgrading service {Arg_1}/{Arg_2} version {Arg_3} because upgrading failed."
            ],
            "message": "Start downgrading service {Arg_1}/{Arg_2} version {Arg_3} because upgrading failed.",
            "translation": "Start downgrading service {Arg_1}/{Arg_2} version {Arg_3} because upgrading failed.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_FAILED_DOWNGRADE",
                "Failed to downgrade service {Arg_1}/{Arg_2} version {Arg_3}, error: {Arg_4}"
            ],
            "message": "Failed to downgrade service {Arg_1}/{Arg_2} version {Arg_3}, error: {Arg_4}",
            "translation": "Failed to downgrade service {Arg_1}/{Arg_2} version {Arg_3}, error: {Arg_4}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                },
                {
                    "id": "Arg_4",
                    "string": "%[4]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 4
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_COMPLETE_DOWNGRADE",
                "Completed downgrading service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}."
            ],
            "message": "Completed downgrading service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}.",
            "translation": "Completed downgrading service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                },
                {
                    "id": "Arg_4",
                    "string": "%[4]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 4
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_FIND_SDEF_FOR_DOWNGRADE",
                "Error finding the new service definition to downgrade to for {Arg_1}/{Arg_2} version {Arg_3} key {Arg_4}. error: {Arg_5}"
            ],
            "message": "Error finding the new service definition to downgrade to for {Arg_1}/{Arg_2} version {Arg_3} key {Arg_4}. error: {Arg_5}",
            "translation": "Error finding the new service definition to downgrade to for {Arg_1}/{Arg_2} version {Arg_3} key {Arg_4}. error: {Arg_5}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                },
                {
                    "id": "Arg_4",
                    "string": "%[4]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 4
                },
                {
                    "id": "Arg_5",
                    "string": "%[5]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 5
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_NO_VERSION_TO_DOWNGRADE",
                "Could not find lower version to downgrade for {Arg_1}/{Arg_2} version {Arg_3}."
            ],
            "message": "Could not find lower version to downgrade for {Arg_1}/{Arg_2} version {Arg_3}.",
            "translation": "Could not find lower version to downgrade for {Arg_1}/{Arg_2} version {Arg_3}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_DOWNGRADE_FROM",
                "Error downgrading service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}. Error: {Arg_5}"
            ],
            "message": "Error downgrading service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}. Error: {Arg_5}",
            "translation": "Error downgrading service {Arg_1}/{Arg_2} from version {Arg_3} to version {Arg_4}. Error: {Arg_5}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                },
                {
                    "id": "Arg_4",
                    "string": "%[4]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 4
                },
                {
                    "id": "Arg_5",
                    "string": "%[5]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 5
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_DOWNGRADE",
                "Error downgrading service {Arg_1}/{Arg_2} version {Arg_3}. {Arg_4}"
            ],
            "message": "Error downgrading service {Arg_1}/{Arg_2} version {Arg_3}. {Arg_4}",
            "translation": "Error downgrading service {Arg_1}/{Arg_2} version {Arg_3}. {Arg_4}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                },
                {
                    "id": "Arg_4",
                    "string": "%[4]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 4
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_START_SVC_RETRY",
                "Start retrying number {Arg_1} for dependent service {Arg_2} version {Arg_3} because service failed."
            ],
            "message": "Start retrying number {Arg_1} for dependent service {Arg_2} version {Arg_3} because service failed.",
            "translation": "Start retrying number {Arg_1} for dependent service {Arg_2} version {Arg_3} because service failed.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_FAILED_SVC_RETRY",
                "Failed retrying number {Arg_1} for dependent service {Arg_2} version {Arg_3}."
            ],
            "message": "Failed retrying number {Arg_1} for dependent service {Arg_2} version {Arg_3}.",
            "translation": "Failed retrying number {Arg_1} for dependent service {Arg_2} version {Arg_3}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_GET_SVC_RETRY_CNT",
                "Failed to get the service retry count for {Arg_1} version {Arg_2}. {Arg_3}"
            ],
            "message": "Failed to get the service retry count for {Arg_1} version {Arg_2}. {Arg_3}",
            "translation": "Failed to get the service retry count for {Arg_1} version {Arg_2}. {Arg_3}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_UPDATE_SVC_RETRY_STATE",
                "Error updating retry start state for service instance {Arg_1} in dadabase. {Arg_2}"
            ],
            "message": "Error updating retry start state for service instance {Arg_1} in dadabase. {Arg_2}",
            "translation": "Error updating retry start state for service instance {Arg_1} in dadabase. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_EXCH_NODE_PATTERN_CHANGED",
                "Node pattern changed on the exchange from {Arg_1} to {Arg_2}."
            ],
            "message": "Node pattern changed on the exchange from {Arg_1} to {Arg_2}.",
            "translation": "Node pattern changed on the exchange from {Arg_1} to {Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_REG_NODE_WITH_NEW_PATTERN",
                "Encountered error while re-registering node with new pattern {Arg_1}. {Arg_2}"
            ],
            "message": "Encountered error while re-registering node with new pattern {Arg_1}. {Arg_2}",
            "translation": "Encountered error while re-registering node with new pattern {Arg_1}. {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_START_REREG_NODE_PATTERN_CHANGE",
                "Start re-registering node after pattern changed to {Arg_1}."
            ],
            "message": "Start re-registering node after pattern changed to {Arg_1}.",
            "translation": "Start re-registering node after pattern changed to {Arg_1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_END_REREG_NODE_PATTERN_CHANGE",
                "Complete re-registering node after pattern changed to {Arg_1}."
            ],
            "message": "Complete re-registering node after pattern changed to {Arg_1}.",
            "translation": "Complete re-registering node after pattern changed to {Arg_1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_PATTERN_CHANGED_AGAIN",
                "Node pattern changed again on the exchange. Will register the node with the new pattern: {Arg_1}"
            ],
            "message": "Node pattern changed again on the exchange. Will register the node with the new pattern: {Arg_1}",
            "translation": "Node pattern changed again on the exchange. Will register the node with the new pattern: {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_ERR_VALIDATE_NEW_PATTERN",
                "Error validating new node pattern {Arg_1}: {Arg_2}"
            ],
            "message": "Error validating new node pattern {Arg_1}: {Arg_2}",
            "translation": "Error validating new node pattern {Arg_1}: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_NODE_KEEP_OLD_PATTERN",
                "The node will keep using the old pattern {Arg_1}"
            ],
            "message": "The node will keep using the old pattern {Arg_1}",
            "translation": "The node will keep using the old pattern {Arg_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_GOV_NEW_PATTERN_VERIFIED",
                "New pattern {Arg_1} is verified. Will cancel agreements and re-register the node with the new pattern."
            ],
            "message": "New pattern {Arg_1} is verified. Will cancel agreements and re-register the node with the new pattern.",
            "translation": "New pattern {Arg_1} is verified. Will cancel agreements and re-register the node with the new pattern.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Compatibility Error: Schema versions are not the same, Consumer policy: {Version}, Producer policy {Version_1}",
            "message": "Compatibility Error: Schema versions are not the same, Consumer policy: {Version}, Producer policy {Version_1}",
            "translation": "Compatibility Error: Schema versions are not the same, Consumer policy: {Version}, Producer policy {Version_1}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Version",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "consumer_policy.Header.Version"
                },
                {
                    "id": "Version_1",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "producer_policy.Header.Version"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Compatibility Error: Node properties {Properties} do not satisfy constraint requirements {Constraints}. Underlying error: {Err}",
            "message": "Compatibility Error: Node properties {Properties} do not satisfy constraint requirements {Constraints}. Underlying error: {Err}",
            "translation": "Compatibility Error: Node properties {Properties} do not satisfy constraint requirements {Constraints}. Underlying error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Properties",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/externalpolicy.PropertyList",
                    "underlyingType": "[]github.com/open-horizon/anax/externalpolicy.Property",
                    "argNum": 1,
                    "expr": "producer_policy.Properties"
                },
                {
                    "id": "Constraints",
                    "string": "%[2]v",
                    "type": "github.com/open-horizon/anax/externalpolicy.ConstraintExpression",
                    "underlyingType": "[]string",
                    "argNum": 2,
                    "expr": "consumer_policy.Constraints"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Compatibility Error: Node properties do not satisfy constraint requirements. {Err}",
            "message": "Compatibility Error: Node properties do not satisfy constraint requirements. {Err}",
            "translation": "Compatibility Error: Node properties do not satisfy constraint requirements. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Compatibility Error: Properties {Properties} do not satisfy Node constraint  {Constraints}. Underlying error: {Err}",
            "message": "Compatibility Error: Properties {Properties} do not satisfy Node constraint  {Constraints}. Underlying error: {Err}",
            "translation": "Compatibility Error: Properties {Properties} do not satisfy Node constraint  {Constraints}. Underlying error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Properties",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/externalpolicy.PropertyList",
                    "underlyingType": "[]github.com/open-horizon/anax/externalpolicy.Property",
                    "argNum": 1,
                    "expr": "consumer_policy.Properties"
                },
                {
                    "id": "Constraints",
                    "string": "%[2]v",
                    "type": "github.com/open-horizon/anax/externalpolicy.ConstraintExpression",
                    "underlyingType": "[]string",
                    "argNum": 2,
                    "expr": "producer_policy.Constraints"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Compatibility Error: Properties do not satisfy node constraint. {Err}",
            "message": "Compatibility Error: Properties do not satisfy node constraint. {Err}",
            "translation": "Compatibility Error: Properties do not satisfy node constraint. {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Compatibility Error: No common Agreement Protocols between {AgreementProtocols} and {AgreementProtocols_1}. Underlying error: {Err}",
            "message": "Compatibility Error: No common Agreement Protocols between {AgreementProtocols} and {AgreementProtocols_1}. Underlying error: {Err}",
            "translation": "Compatibility Error: No common Agreement Protocols between {AgreementProtocols} and {AgreementProtocols_1}. Underlying error: {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "AgreementProtocols",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/policy.AgreementProtocolList",
                    "underlyingType": "[]github.com/open-horizon/anax/policy.AgreementProtocol",
                    "argNum": 1,
                    "expr": "producer_policy.AgreementProtocols"
                },
                {
                    "id": "AgreementProtocols_1",
                    "string": "%[2]v",
                    "type": "github.com/open-horizon/anax/policy.AgreementProtocolList",
                    "underlyingType": "[]github.com/open-horizon/anax/policy.AgreementProtocol",
                    "argNum": 2,
                    "expr": "consumer_policy.AgreementProtocols"
                },
                {
                    "id": "Err",
                    "string": "%[3]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 3,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Compatibility Error: Data verification must be compatible, producer has {DataVerify} and consumer has {DataVerify_1}.",
            "message": "Compatibility Error: Data verification must be compatible, producer has {DataVerify} and consumer has {DataVerify_1}.",
            "translation": "Compatibility Error: Data verification must be compatible, producer has {DataVerify} and consumer has {DataVerify_1}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "DataVerify",
                    "string": "%[1]v",
                    "type": "github.com/open-horizon/anax/policy.DataVerification",
                    "underlyingType": "struct{Enabled bool \"json:\\\"enabled,omitempty\\\"\"; URL string \"json:\\\"URL,omitempty\\\"\"; URLUser string \"json:\\\"URLUser,omitempty\\\"\"; URLPassword string \"json:\\\"URLPassword,omitempty\\\"\"; Interval int \"json:\\\"interval,omitempty\\\"\"; CheckRate int \"json:\\\"check_rate,omitempty\\\"\"; Metering github.com/open-horizon/anax/policy.Meter \"json:\\\"metering,omitempty\\\"\"}",
                    "argNum": 1,
                    "expr": "producer_policy.DataVerify"
                },
                {
                    "id": "DataVerify_1",
                    "string": "%[2]v",
                    "type": "github.com/open-horizon/anax/policy.DataVerification",
                    "underlyingType": "struct{Enabled bool \"json:\\\"enabled,omitempty\\\"\"; URL string \"json:\\\"URL,omitempty\\\"\"; URLUser string \"json:\\\"URLUser,omitempty\\\"\"; URLPassword string \"json:\\\"URLPassword,omitempty\\\"\"; Interval int \"json:\\\"interval,omitempty\\\"\"; CheckRate int \"json:\\\"check_rate,omitempty\\\"\"; Metering github.com/open-horizon/anax/policy.Meter \"json:\\\"metering,omitempty\\\"\"}",
                    "argNum": 2,
                    "expr": "consumer_policy.DataVerify"
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_PROD_AG_EXISTS_IGNORE_PROPOSAL",
                "Agreement {Arg_1} already exists, ignoring proposal: {Arg_2}"
            ],
            "message": "Agreement {Arg_1} already exists, ignoring proposal: {Arg_2}",
            "translation": "Agreement {Arg_1} already exists, ignoring proposal: {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_PROD_ERR_DEMARSH_TC_FOR_AG",
                "received error demarshalling TsAndCs for agrement {Arg_1}, {Arg_2}"
            ],
            "message": "received error demarshalling TsAndCs for agrement {Arg_1}, {Arg_2}",
            "translation": "received error demarshalling TsAndCs for agrement {Arg_1}, {Arg_2}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_PROD_NODE_REJECTED_PROPOSAL_MSG",
                "Node received Proposal message using agreement {Arg_1} for service {Arg_2}/{Arg_3} from the agbot {Arg_4}."
            ],
            "message": "Node received Proposal message using agreement {Arg_1} for service {Arg_2}/{Arg_3} from the agbot {Arg_4}.",
            "translation": "Node received Proposal message using agreement {Arg_1} for service {Arg_2}/{Arg_3} from the agbot {Arg_4}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                },
                {
                    "id": "Arg_4",
                    "string": "%[4]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 4
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_PROD_NODE_REJECTED_PROPOSAL",
                "Node rejected the proposal for service {Arg_1}/{Arg_2}."
            ],
            "message": "Node rejected the proposal for service {Arg_1}/{Arg_2}.",
            "translation": "Node rejected the proposal for service {Arg_1}/{Arg_2}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                }
            ],
            "fuzzy": true
        },
        {
            "id": [
                "EL_PROD_ERR_HANDLE_PROPOSAL",
                "Error handling proposal for service {Arg_1}/{Arg_2}. Error: {Arg_3}"
            ],
            "message": "Error handling proposal for service {Arg_1}/{Arg_2}. Error: {Arg_3}",
            "translation": "Error handling proposal for service {Arg_1}/{Arg_2}. Error: {Arg_3}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Arg_1",
                    "string": "%[1]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 1
                },
                {
                    "id": "Arg_2",
                    "string": "%[2]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 2
                },
                {
                    "id": "Arg_3",
                    "string": "%[3]v",
                    "type": "",
                    "underlyingType": "interface{}",
                    "argNum": 3
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to make directory for self signed MMS API certificate, error {Err}",
            "message": "unable to make directory for self signed MMS API certificate, error {Err}",
            "translation": "unable to make directory for self signed MMS API certificate, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to generate random number for MMS API certificate serial number, error {Err}",
            "message": "unable to generate random number for MMS API certificate serial number, error {Err}",
            "translation": "unable to generate random number for MMS API certificate serial number, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to generate private key for MMS API certificate, error {Err}",
            "message": "unable to generate private key for MMS API certificate, error {Err}",
            "translation": "unable to generate private key for MMS API certificate, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to create MMS API certificate, error {Err}",
            "message": "unable to create MMS API certificate, error {Err}",
            "translation": "unable to create MMS API certificate, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Err",
                    "string": "%[1]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 1,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to write MMS API certificate to file {ServerCertificate}, error {Err}",
            "message": "unable to write MMS API certificate to file {ServerCertificate}, error {Err}",
            "translation": "unable to write MMS API certificate to file {ServerCertificate}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServerCertificate",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "common.Configuration.ServerCertificate"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to encode MMS API certificate to file {ServerCertificate}, error {Err}",
            "message": "unable to encode MMS API certificate to file {ServerCertificate}, error {Err}",
            "translation": "unable to encode MMS API certificate to file {ServerCertificate}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServerCertificate",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "common.Configuration.ServerCertificate"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to close MMS API certificate file {ServerCertificate}, error {Err}",
            "message": "unable to close MMS API certificate file {ServerCertificate}, error {Err}",
            "translation": "unable to close MMS API certificate file {ServerCertificate}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServerCertificate",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "common.Configuration.ServerCertificate"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to write MMS API certificate private key to file {ServerKey}, error {Err}",
            "message": "unable to write MMS API certificate private key to file {ServerKey}, error {Err}",
            "translation": "unable to write MMS API certificate private key to file {ServerKey}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServerKey",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "common.Configuration.ServerKey"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to encode MMS API certificate private key to file {ServerKey}, error {Err}",
            "message": "unable to encode MMS API certificate private key to file {ServerKey}, error {Err}",
            "translation": "unable to encode MMS API certificate private key to file {ServerKey}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServerKey",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "common.Configuration.ServerKey"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "unable to close MMS API certificate private key file {ServerKey}, error {Err}",
            "message": "unable to close MMS API certificate private key file {ServerKey}, error {Err}",
            "translation": "unable to close MMS API certificate private key file {ServerKey}, error {Err}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ServerKey",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "common.Configuration.ServerKey"
                },
                {
                    "id": "Err",
                    "string": "%[2]v",
                    "type": "error",
                    "underlyingType": "interface{Error() string}",
                    "argNum": 2,
                    "expr": "err"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Version_Expression: Whitespace is not permitted in {Expr}.",
            "message": "Version_Expression: Whitespace is not permitted in {Expr}.",
            "translation": "Version_Expression: Whitespace is not permitted in {Expr}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Expr",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "expr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Version_Expression: {Verstring} is not a valid version string.",
            "message": "Version_Expression: {Verstring} is not a valid version string.",
            "translation": "Version_Expression: {Verstring} is not a valid version string.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Verstring",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ver_string"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Version_Expression: {Verstring} does not begin with an inclusion or exclusion directive.",
            "message": "Version_Expression: {Verstring} does not begin with an inclusion or exclusion directive.",
            "translation": "Version_Expression: {Verstring} does not begin with an inclusion or exclusion directive.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Verstring",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ver_string"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Version_Expression: {Verstring} does not end with an inclusion or exclusion directive.",
            "message": "Version_Expression: {Verstring} does not end with an inclusion or exclusion directive.",
            "translation": "Version_Expression: {Verstring} does not end with an inclusion or exclusion directive.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Verstring",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ver_string"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Version_Expression: Incorrect number of versions in expression: {Expr}.",
            "message": "Version_Expression: Incorrect number of versions in expression: {Expr}.",
            "translation": "Version_Expression: Incorrect number of versions in expression: {Expr}.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Expr",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "expr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Input version string {V1} or {V2} is not a valid single version string.",
            "message": "Input version string {V1} or {V2} is not a valid single version string.",
            "translation": "Input version string {V1} or {V2} is not a valid single version string.",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "V1",
                    "string": "%[1]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "v1"
                },
                {
                    "id": "V2",
                    "string": "%[2]v",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "v2"
                }
            ],
            "fuzzy": true
        }
    ]
}